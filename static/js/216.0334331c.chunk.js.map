{"version":3,"file":"static/js/216.0334331c.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/TileLayer.js","../node_modules/@react-leaflet/core/lib/grid-layer.js","../node_modules/react-leaflet/lib/Marker.js","components/FlightTracker.tsx","../node_modules/@react-leaflet/core/lib/component.js","../node_modules/@react-leaflet/core/lib/events.js","../node_modules/@react-leaflet/core/lib/layer.js","../node_modules/@react-leaflet/core/lib/attribution.js","../node_modules/@react-leaflet/core/lib/path.js","../node_modules/@react-leaflet/core/lib/generic.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/hooks.js","../node_modules/@react-leaflet/core/lib/element.js","../node_modules/@react-leaflet/core/lib/context.js","plane-icon.svg","../node_modules/@react-leaflet/core/lib/pane.js"],"sourcesContent":["import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url, ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n","export function updateGridLayer(layer, props, prevProps) {\n    const { opacity, zIndex } = props;\n    if (opacity != null && opacity !== prevProps.opacity) {\n        layer.setOpacity(opacity);\n    }\n    if (zIndex != null && zIndex !== prevProps.zIndex) {\n        layer.setZIndex(zIndex);\n    }\n}\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position, ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport planeIcon from '../plane-icon.svg';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\n// Fix for default markers\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\ninterface Location {\r\n  lat: number;\r\n  lng: number;\r\n  name?: string;\r\n}\r\n\r\ninterface FlightData {\r\n  flight: {\r\n    number: string;\r\n    iata: string;\r\n  };\r\n  departure: {\r\n    airport: string;\r\n    timezone: string;\r\n  };\r\n  arrival: {\r\n    airport: string;\r\n    timezone: string;\r\n  };\r\n  airline: {\r\n    name: string;\r\n  };\r\n  live: {\r\n    latitude: number;\r\n    longitude: number;\r\n    altitude: number;\r\n    direction: number;\r\n    speed_horizontal: number;\r\n    speed_vertical: number;\r\n    is_ground: boolean;\r\n    updated: string;\r\n  };\r\n}\r\n\r\ninterface AllAircraftData {\r\n  icao24: string;\r\n  callsign?: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  altitude: number;\r\n  direction: number;\r\n  speed: number;\r\n  isOnGround: boolean;\r\n}\r\n\r\ninterface InterpolatedPosition {\r\n  lat: number;\r\n  lng: number;\r\n  name: string;\r\n  timestamp?: number;\r\n}\r\n\r\ninterface CachedFlightData {\r\n  data: any;\r\n  timestamp: number;\r\n}\r\n\r\n// Conversion functions\r\nconst metersToFeet = (meters: number): number => {\r\n  return Math.round(meters * 3.28084);\r\n};\r\n\r\nconst kmhToKnots = (kmh: number): number => {\r\n  return Math.round(kmh * 0.539957);\r\n};\r\n\r\n// Calculate interpolated position based on speed and heading\r\nconst calculateInterpolatedPosition = (startPos: InterpolatedPosition, speed: number, heading: number): InterpolatedPosition => {\r\n  const now = Date.now();\r\n  const timeDiff = (now - (startPos.timestamp ?? now)) / 1000; // Convert to seconds\r\n  const distance = (speed * timeDiff) / 3600; // Convert km/h to km\r\n\r\n  // Convert heading to radians\r\n  const headingRad = (heading * Math.PI) / 180;\r\n  \r\n  // Calculate new position using great circle formula\r\n  const lat1 = startPos.lat * Math.PI / 180;\r\n  const lon1 = startPos.lng * Math.PI / 180;\r\n  const d = distance / 6371; // Earth's radius in km\r\n\r\n  const lat2 = Math.asin(\r\n    Math.sin(lat1) * Math.cos(d) +\r\n    Math.cos(lat1) * Math.sin(d) * Math.cos(headingRad)\r\n  );\r\n\r\n  const lon2 = lon1 + Math.atan2(\r\n    Math.sin(headingRad) * Math.sin(d) * Math.cos(lat1),\r\n    Math.cos(d) - Math.sin(lat1) * Math.sin(lat2)\r\n  );\r\n\r\n  return {\r\n    lat: lat2 * 180 / Math.PI,\r\n    lng: lon2 * 180 / Math.PI,\r\n    timestamp: now,\r\n    name: startPos.name // Add the required 'name' property from the input position\r\n  };\r\n};\r\n\r\n// Calculate distance between two points using Haversine formula\r\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\r\n  const R = 6371e3; // Earth's radius in meters\r\n  const φ1 = lat1 * Math.PI / 180;\r\n  const φ2 = lat2 * Math.PI / 180;\r\n  const Δφ = (lat2 - lat1) * Math.PI / 180;\r\n  const Δλ = (lon2 - lon1) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return Math.round(R * c); // Distance in meters\r\n};\r\n\r\n// Component to handle map updates\r\nconst MapUpdater = ({ center }: { center: [number, number] }) => {\r\n  const map = useMap();\r\n  \r\n  useEffect(() => {\r\n    map.setView(center, map.getZoom());\r\n  }, [center, map]);\r\n  \r\n  return null;\r\n};\r\n\r\nconst FlightTracker: React.FC = () => {\r\n  const { isDarkMode } = useTheme();\r\n  const [location, setLocation] = useState<Location | null>(null);\r\n  const [aircraftPosition, setAircraftPosition] = useState<Location | null>(null);\r\n  const [allAircraft, setAllAircraft] = useState<AllAircraftData[]>([]);\r\n  const [trackingAllAircraft, setTrackingAllAircraft] = useState(false);\r\n  const [distance, setDistance] = useState<number | null>(null);\r\n  const [displayedDistance, setDisplayedDistance] = useState<number | null>(null);\r\n  const [error, setError] = useState<string>('');\r\n  const [searchQuery, setSearchQuery] = useState(() => {\r\n    const saved = localStorage.getItem('lastSearchQuery');\r\n    return saved || '';\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [flightNumber, setFlightNumber] = useState(() => {\r\n    const saved = localStorage.getItem('lastFlightNumber');\r\n    return saved || '';\r\n  });\r\n  const [flightData, setFlightData] = useState<FlightData | null>(null);\r\n  const [lastKnownPosition, setLastKnownPosition] = useState<InterpolatedPosition | null>(null);\r\n  const [trackingInterval, setTrackingInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const autoRefreshIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [interpolationInterval, setInterpolationInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [distanceUpdateInterval, setDistanceUpdateInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [distanceInterpolationInterval, setDistanceInterpolationInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [lastDrawTime, setLastDrawTime] = useState<Date | null>(null);\r\n  const [lastApiCall, setLastApiCall] = useState<number | null>(null);\r\n\r\n  // Auto-track flight and use saved location on mount\r\n  useEffect(() => {\r\n    // Load saved location if it exists\r\n    const savedLocation = localStorage.getItem('lastLocation');\r\n    if (savedLocation) {\r\n      try {\r\n        const parsedLocation = JSON.parse(savedLocation);\r\n        setLocation(parsedLocation);\r\n      } catch (e) {\r\n        console.error('Error parsing saved location:', e);\r\n      }\r\n    }\r\n\r\n    // Auto-track flight if flight number exists\r\n    const savedFlightNumber = localStorage.getItem('lastFlightNumber');\r\n    if (savedFlightNumber) {\r\n      console.log('Auto-tracking saved flight:', savedFlightNumber);\r\n      setFlightNumber(savedFlightNumber);\r\n      // Use a setTimeout to ensure flightNumber state is set before tracking\r\n      setTimeout(() => {\r\n        trackFlight(false);\r\n      }, 100);\r\n    }\r\n  }, []);  // Empty dependency array means this runs once on mount\r\n\r\n  // Save search query to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      localStorage.setItem('lastSearchQuery', searchQuery);\r\n    } else {\r\n      localStorage.removeItem('lastSearchQuery');\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  // Save flight number to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (flightNumber) {\r\n      localStorage.setItem('lastFlightNumber', flightNumber);\r\n    } else {\r\n      localStorage.removeItem('lastFlightNumber');\r\n    }\r\n  }, [flightNumber]);\r\n\r\n  // Save location to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (location) {\r\n      localStorage.setItem('lastLocation', JSON.stringify(location));\r\n    } else {\r\n      localStorage.removeItem('lastLocation');\r\n    }\r\n  }, [location]);\r\n\r\n  // Cleanup intervals on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('Component unmounting, clearing all intervals.');\r\n      if (trackingInterval) clearInterval(trackingInterval);\r\n      if (autoRefreshIntervalRef.current) clearInterval(autoRefreshIntervalRef.current);\r\n      if (interpolationInterval) clearInterval(interpolationInterval);\r\n      if (distanceUpdateInterval) clearInterval(distanceUpdateInterval);\r\n      if (distanceInterpolationInterval) clearInterval(distanceInterpolationInterval);\r\n    };\r\n  }, []); // Empty dependency array ensures this runs only on unmount\r\n\r\n  // Update distance when location or aircraft position changes\r\n  useEffect(() => {\r\n    if (location && aircraftPosition) {\r\n      const newDistance = calculateDistance(\r\n        location.lat,\r\n        location.lng,\r\n        aircraftPosition.lat,\r\n        aircraftPosition.lng\r\n      );\r\n      setDistance(newDistance);\r\n      setDisplayedDistance(newDistance); // Set initial value immediately\r\n\r\n      // Clear existing intervals\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n      }\r\n\r\n      // Set up new interval for distance updates\r\n      const interval = setInterval(() => {\r\n        if (location && aircraftPosition) {\r\n          const currentDistance = calculateDistance(\r\n            location.lat,\r\n            location.lng,\r\n            aircraftPosition.lat,\r\n            aircraftPosition.lng\r\n          );\r\n          setDistance(currentDistance);\r\n        }\r\n      }, 25); // Update every 100ms for smooth display\r\n\r\n      setDistanceUpdateInterval(interval);\r\n\r\n      // Set up separate interval for position interpolation for distance calculation\r\n      if (flightData?.live && lastKnownPosition) {\r\n        const distanceInterpolation = setInterval(() => {\r\n          if (flightData.live && lastKnownPosition && !flightData.live.is_ground && flightData.live.speed_horizontal >= 50) {\r\n            const newPos = calculateInterpolatedPosition(\r\n              lastKnownPosition,\r\n              flightData.live.speed_horizontal,\r\n              flightData.live.direction\r\n            );\r\n            setAircraftPosition({\r\n              lat: newPos.lat,\r\n              lng: newPos.lng,\r\n              name: `${flightData.airline.name} ${flightData.flight.number}`\r\n            });\r\n          }\r\n        }, 100); // Update every 100ms for smooth distance calculation\r\n\r\n        setDistanceInterpolationInterval(distanceInterpolation);\r\n      }\r\n    } else {\r\n      setDistance(null);\r\n      setDisplayedDistance(null);\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n        setDistanceUpdateInterval(null);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n        setDistanceInterpolationInterval(null);\r\n      }\r\n    }\r\n  }, [location, aircraftPosition, flightData, lastKnownPosition, calculateInterpolatedPosition]);\r\n\r\n  // Animate distance display\r\n  useEffect(() => {\r\n    if (distance === null || displayedDistance === null) {\r\n      setDisplayedDistance(distance);\r\n      return;\r\n    }\r\n\r\n    const diff = distance - displayedDistance;\r\n    if (Math.abs(diff) < 1) {\r\n      setDisplayedDistance(distance);\r\n      return;\r\n    }\r\n\r\n    const step = Math.sign(diff) * Math.min(Math.abs(diff), Math.max(1, Math.abs(diff) / 5));\r\n    const timer = setTimeout(() => {\r\n      setDisplayedDistance(prev => prev !== null ? prev + step : null);\r\n    }, 16); // ~60fps\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [distance, displayedDistance]);\r\n\r\n  // Get current location\r\n  const getCurrentLocation = () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by your browser');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const newLocation = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n          name: 'Current Location'\r\n        };\r\n        setLocation(newLocation);\r\n        setAircraftPosition(null); // Clear aircraft position when getting current location\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        setError('Error getting location: ' + error.message);\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Search for location\r\n  const searchLocation = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`\r\n      );\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch location');\r\n      \r\n      const data = await response.json();\r\n      if (data.length === 0) {\r\n        setError('Location not found');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const newLocation = {\r\n        lat: parseFloat(data[0].lat),\r\n        lng: parseFloat(data[0].lon),\r\n        name: data[0].display_name\r\n      };\r\n      setLocation(newLocation);\r\n      setAircraftPosition(null); // Clear aircraft position when searching for location\r\n    } catch (err) {\r\n      setError('Error searching location: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update interpolated position for map display\r\n  const updateInterpolatedPosition = useCallback(() => {\r\n    if (flightData?.live && lastKnownPosition) {\r\n      // Don't interpolate if on ground or if speed is too low\r\n      if (flightData.live.is_ground || flightData.live.speed_horizontal < 50) {\r\n        console.log('Not interpolating - aircraft on ground or speed too low');\r\n        setLastDrawTime(new Date()); // Still update the timestamp to show it's trying\r\n        return;\r\n      }\r\n\r\n      console.log('Calculating new position...');\r\n      const newPos = calculateInterpolatedPosition(\r\n        lastKnownPosition,\r\n        flightData.live.speed_horizontal,\r\n        flightData.live.direction\r\n      );\r\n      \r\n      console.log(`New position: ${newPos.lat}, ${newPos.lng}`);\r\n      \r\n      // Update positions with a unique flight identifier\r\n      newPos.name = `${flightData.flight.number}-${flightData.airline.name}`;\r\n      \r\n      // Set the new interpolated position\r\n      setLastKnownPosition(newPos);\r\n      setAircraftPosition({\r\n        lat: newPos.lat,\r\n        lng: newPos.lng,\r\n        name: newPos.name\r\n      });\r\n      setLastDrawTime(new Date());\r\n    } else {\r\n      console.log('Cannot interpolate - missing flight data or last position');\r\n    }\r\n  }, [flightData, lastKnownPosition, setLastKnownPosition, setAircraftPosition, setLastDrawTime]);\r\n\r\n  // Reset all tracking state and intervals\r\n  const resetAllTrackingState = useCallback(() => {\r\n    console.log('Completely resetting all tracking state');\r\n\r\n    // Clear the auto-refresh interval using the ref\r\n    if (autoRefreshIntervalRef.current) {\r\n      console.log('Clearing auto-refresh interval during reset');\r\n      clearInterval(autoRefreshIntervalRef.current);\r\n      autoRefreshIntervalRef.current = null;\r\n    }\r\n    \r\n    // Clear other intervals\r\n    if (trackingInterval) {\r\n      clearInterval(trackingInterval);\r\n      setTrackingInterval(null);\r\n    }\r\n    if (interpolationInterval) {\r\n      clearInterval(interpolationInterval);\r\n      setInterpolationInterval(null);\r\n    }\r\n    if (distanceUpdateInterval) {\r\n      clearInterval(distanceUpdateInterval);\r\n      setDistanceUpdateInterval(null);\r\n    }\r\n    if (distanceInterpolationInterval) {\r\n      clearInterval(distanceInterpolationInterval);\r\n      setDistanceInterpolationInterval(null);\r\n    }\r\n\r\n    // Clear aircraft data\r\n    setAircraftPosition(null);\r\n    setAllAircraft([]);\r\n    setTrackingAllAircraft(false);\r\n    setFlightData(null);\r\n    setLastKnownPosition(null);\r\n    \r\n    // Clear UI state\r\n    setDistance(null);\r\n    setDisplayedDistance(null);\r\n    setLastApiCall(null);\r\n    setLastDrawTime(null);\r\n    \r\n    // Clear session storage but NOT the flight number in localStorage\r\n    sessionStorage.removeItem('lastApiCall');\r\n    // Don't remove the flight number to keep it persisted\r\n    // localStorage.removeItem('lastFlightNumber');\r\n  }, [trackingInterval, interpolationInterval, distanceUpdateInterval, distanceInterpolationInterval]); // Include interval states if they are used in cleanup\r\n\r\n  // Function to clear the auto-refresh interval specifically\r\n  const clearAutoRefreshInterval = useCallback(() => {\r\n    if (autoRefreshIntervalRef.current) {\r\n      console.log('Clearing existing auto-refresh interval explicitly');\r\n      clearInterval(autoRefreshIntervalRef.current);\r\n      autoRefreshIntervalRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // Track flight\r\n  const trackFlight = useCallback(async (forceRefresh: boolean = false) => {\r\n    if (!flightNumber.trim()) {\r\n      // Don't set error if just loading from storage initially\r\n      if (forceRefresh) setError('Please enter a flight number');\r\n      return;\r\n    }\r\n\r\n    // Store the flight number in localStorage immediately if not just a refresh\r\n    if (!forceRefresh) {\r\n        localStorage.setItem('lastFlightNumber', flightNumber);\r\n    }\r\n\r\n    // Reset state only when initiating a new track, not on auto-refresh\r\n    if (!forceRefresh) {\r\n      resetAllTrackingState();\r\n    } else {\r\n      // On auto-refresh, just clear the previous interval timer\r\n      clearAutoRefreshInterval();\r\n    }\r\n    \r\n    setLoading(true);\r\n    // Clear error only when initiating, not necessarily on refresh\r\n    if (!forceRefresh) setError('');\r\n\r\n    try {\r\n      console.log(`Fetching flight data for ${flightNumber} (Refresh: ${forceRefresh})`);\r\n      const callsign = flightNumber.padEnd(8, ' ');\r\n      const response = await fetch(\r\n        `https://opensky-network.org/api/states/all?time=0&icao24=&callback=`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch flight data (${response.status})`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.states || data.states.length === 0) {\r\n        throw new Error('No state data received from API');\r\n      }\r\n      \r\n      const flightState = data.states.find((state: any[]) => \r\n        state[1] && state[1].trim().includes(flightNumber.toUpperCase())\r\n      );\r\n      \r\n      if (!flightState) {\r\n        throw new Error('Flight not found in current tracking data');\r\n      }\r\n      \r\n      // Extract information from the OpenSky state array\r\n      const icao24 = flightState[0];\r\n      const callsignFromApi = flightState[1]?.trim();\r\n      const country = flightState[2];\r\n      const longitude = flightState[5];\r\n      const latitude = flightState[6]; \r\n      const altitude = flightState[7];\r\n      const isOnGround = flightState[8];\r\n      const velocity = flightState[9]; // m/s\r\n      const heading = flightState[10];\r\n      const verticalRate = flightState[11];\r\n      \r\n      // Convert velocity from m/s to km/h\r\n      const speedKmh = velocity ? velocity * 3.6 : 0;\r\n      \r\n      // Create our flight data object\r\n      const flight: FlightData = {\r\n        flight: {\r\n          number: flightNumber,\r\n          iata: flightNumber\r\n        },\r\n        departure: {\r\n          airport: 'N/A', // OpenSky doesn't provide this information\r\n          timezone: ''\r\n        },\r\n        arrival: {\r\n          airport: 'N/A', // OpenSky doesn't provide this information  \r\n          timezone: ''\r\n        },\r\n        airline: {\r\n          name: callsignFromApi || flightNumber // Use callsign as airline+flight if available\r\n        },\r\n        live: {\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          altitude: altitude || 0,\r\n          direction: heading || 0,\r\n          speed_horizontal: speedKmh,\r\n          speed_vertical: verticalRate || 0,\r\n          is_ground: Boolean(isOnGround),\r\n          updated: new Date().toISOString()\r\n        }\r\n      };\r\n\r\n      const apiTimestamp = Date.now();\r\n      setLastApiCall(apiTimestamp);\r\n      sessionStorage.setItem('lastApiCall', apiTimestamp.toString());\r\n      \r\n      // Only update state after we have all the data to prevent flashing\r\n      setFlightData(flight);\r\n      \r\n      // Create position object\r\n      const newPosition = {\r\n        lat: flight.live.latitude,\r\n        lng: flight.live.longitude,\r\n        name: `${flight.airline.name} ${flight.flight.number}`,\r\n        timestamp: apiTimestamp\r\n      };\r\n      \r\n      // Set last known position for interpolation\r\n      setLastKnownPosition(newPosition); \r\n      \r\n      // Set aircraft position for display\r\n      setAircraftPosition({\r\n        lat: newPosition.lat,\r\n        lng: newPosition.lng,\r\n        name: newPosition.name\r\n      });\r\n\r\n      // Set up the NEXT auto-refresh interval\r\n      console.log('Setting up next auto-refresh for flight data');\r\n      autoRefreshIntervalRef.current = setInterval(() => {\r\n        console.log(`Auto-refresh triggered for flight ${flightNumber} at ${new Date().toLocaleTimeString()}`);\r\n        trackFlight(true); // Force refresh from API\r\n      }, 60000); // Refresh every 60 seconds (1 minute)\r\n      \r\n    } catch (err) {\r\n      console.error('Error during trackFlight:', err); // Log the actual error\r\n      setError('Error tracking flight: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n      // Stop refreshing on error by clearing the interval IF it exists\r\n      clearAutoRefreshInterval(); \r\n      // Optionally reset state fully on error? Decided against for now to show last known good state.\r\n      // resetAllTrackingState(); \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [flightNumber, resetAllTrackingState, clearAutoRefreshInterval]);\r\n\r\n  // Get all aircraft\r\n  const getAllAircraft = useCallback(async (isAutoRefresh: boolean = false) => {\r\n    // Reset state only when initiating, not on auto-refresh\r\n    if (!isAutoRefresh) {\r\n      resetAllTrackingState();\r\n    } else {\r\n      // On auto-refresh, just clear the previous interval timer\r\n      clearAutoRefreshInterval();\r\n    }\r\n    \r\n    setLoading(true);\r\n    // Clear error only when initiating\r\n    if (!isAutoRefresh) setError('');\r\n  \r\n    try {\r\n      console.log(`Fetching all aircraft data (Refresh: ${isAutoRefresh})`);\r\n      setTrackingAllAircraft(true);\r\n\r\n      const response = await fetch(\r\n        `https://opensky-network.org/api/states/all?time=0&callback=`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch aircraft data (${response.status})`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.states || data.states.length === 0) {\r\n        // Not necessarily an error, could be no aircraft transmitting\r\n        console.log('No aircraft state data received from API.');\r\n        setAllAircraft([]); \r\n      } else {\r\n          // Process aircraft data\r\n          const aircraftData: AllAircraftData[] = data.states\r\n          .filter((state: any[]) => \r\n            state[5] && state[6] && \r\n            !isNaN(state[5]) && !isNaN(state[6]) &&\r\n            !state[8] // Filter out on-ground\r\n          )\r\n          .map((state: any[]) => ({\r\n            icao24: state[0],\r\n            callsign: state[1]?.trim(),\r\n            latitude: state[6],\r\n            longitude: state[5],\r\n            altitude: state[7] || 0,\r\n            direction: state[10] || 0,\r\n            speed: state[9] ? state[9] * 3.6 : 0,\r\n            isOnGround: Boolean(state[8])\r\n          }));\r\n          setAllAircraft(aircraftData);\r\n          // Center map if it's the initial load\r\n          if (!isAutoRefresh && aircraftData.length > 0) {\r\n            const centralAircraft = aircraftData[Math.floor(aircraftData.length / 2)];\r\n            setLocation({\r\n              lat: centralAircraft.latitude,\r\n              lng: centralAircraft.longitude,\r\n              name: 'Map Center'\r\n            });\r\n          }\r\n      }\r\n      \r\n      const apiTimestamp = Date.now();\r\n      setLastApiCall(apiTimestamp);\r\n      sessionStorage.setItem('lastApiCall', apiTimestamp.toString());\r\n      setError(''); // Clear error on successful fetch\r\n\r\n      // Set up the NEXT auto-refresh interval\r\n      console.log('Setting up next auto-refresh for all aircraft data');\r\n      autoRefreshIntervalRef.current = setInterval(() => {\r\n        console.log(`Auto-refresh triggered for all aircraft at ${new Date().toLocaleTimeString()}`);\r\n        getAllAircraft(true); // Auto refresh\r\n      }, 60000); // Refresh every 60 seconds (1 minute)\r\n      \r\n    } catch (err) {\r\n      console.error('Error during getAllAircraft:', err); // Log the actual error\r\n      setError('Error fetching aircraft: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n      setTrackingAllAircraft(false); // Stop tracking all mode on error\r\n      // Stop refreshing on error by clearing the interval\r\n      clearAutoRefreshInterval();\r\n      // Optionally reset state fully on error?\r\n      // resetAllTrackingState(); \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [resetAllTrackingState, clearAutoRefreshInterval]);\r\n\r\n  // Clear stored location and stop tracking\r\n  const clearLocation = () => {\r\n    // Reset map view\r\n    setLocation(null);\r\n    \r\n    // Reset input fields\r\n    setSearchQuery('');\r\n    setError('');\r\n    setFlightNumber('');\r\n    \r\n    // Reset all tracking state (this will also clear intervals)\r\n    resetAllTrackingState();\r\n    \r\n    // Clear localStorage\r\n    localStorage.removeItem('lastLocation');\r\n    localStorage.removeItem('lastSearchQuery');\r\n    localStorage.removeItem('lastFlightNumber');\r\n  };\r\n\r\n  // Force refresh flight data from API\r\n  const handleRefreshClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    if (trackingAllAircraft) {\r\n      getAllAircraft(false);\r\n    } else {\r\n      trackFlight(true);\r\n    }\r\n  };\r\n\r\n  const interpolatePosition = (startPos: InterpolatedPosition, endPos: InterpolatedPosition, progress: number): InterpolatedPosition => {\r\n    const startTime = startPos.timestamp || 0;\r\n    const endTime = endPos.timestamp || 1;\r\n    const currentTime = startTime + (endTime - startTime) * progress;\r\n    \r\n    return {\r\n      lat: startPos.lat + (endPos.lat - startPos.lat) * progress,\r\n      lng: startPos.lng + (endPos.lng - startPos.lng) * progress,\r\n      name: `${startPos.name} → ${endPos.name}`,\r\n      timestamp: currentTime\r\n    };\r\n  };\r\n\r\n  const updateAircraftPosition = (progress: number) => {\r\n    if (lastKnownPosition && aircraftPosition) {\r\n      const interpolated = interpolatePosition(\r\n        {\r\n          ...lastKnownPosition,\r\n          name: lastKnownPosition.name || 'Unknown Location'\r\n        },\r\n        {\r\n          ...aircraftPosition,\r\n          name: aircraftPosition.name || 'Unknown Location'\r\n        },\r\n        progress\r\n      );\r\n      setAircraftPosition(interpolated);\r\n    }\r\n  };\r\n\r\n  const handleLocationUpdate = (location: Location) => {\r\n    const position: InterpolatedPosition = {\r\n      lat: location.lat,\r\n      lng: location.lng,\r\n      name: location.name || 'Unknown Location',\r\n      timestamp: Date.now()\r\n    };\r\n    setLastKnownPosition(position);\r\n    setAircraftPosition(position);\r\n  };\r\n\r\n  // Initialize map interpolation if cached data is loaded\r\n  useEffect(() => {\r\n    // Clear any existing interval first\r\n    if (interpolationInterval) {\r\n      console.log('Clearing existing interpolation interval');\r\n      clearInterval(interpolationInterval);\r\n      setInterpolationInterval(null);\r\n    }\r\n    \r\n    // Only set up new interpolation if we have valid flight data and not tracking all aircraft\r\n    if (flightData && lastKnownPosition && !trackingAllAircraft) {\r\n      console.log('Initializing interpolation from fresh data');\r\n      // Use immediate call for testing and then set interval\r\n      updateInterpolatedPosition(); // Initial call\r\n      const interpolation = setInterval(() => {\r\n        console.log('Interpolation interval triggered');\r\n        updateInterpolatedPosition();\r\n      }, 5000); // Update position every 5 seconds\r\n      \r\n      setInterpolationInterval(interpolation);\r\n    }\r\n\r\n    // Clean up interval when component unmounts\r\n    return () => {\r\n      if (interpolationInterval) {\r\n        clearInterval(interpolationInterval);\r\n      }\r\n    };\r\n  }, [flightData, lastKnownPosition, trackingAllAircraft, updateInterpolatedPosition]);\r\n  \r\n  return (\r\n    <div className={`${isDarkMode ? 'bg-gray-900' : 'bg-gray-100'} p-2 sm:p-4`}>\r\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow p-3 sm:p-6 max-w-7xl mx-auto`}>\r\n        <div className=\"mb-2 sm:mb-4 space-y-2 sm:space-y-4\">\r\n          <div className=\"flex flex-col sm:flex-row flex-wrap gap-2 sm:gap-4\">\r\n            <div className=\"w-full sm:flex-1 sm:min-w-[200px] flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && searchLocation()}\r\n                hidden={location !== null}\r\n                placeholder=\"Enter location (e.g., London, UK)\"\r\n                className={`flex-1 p-2 text-sm sm:text-base border rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  isDarkMode ? 'bg-gray-700 text-white border-gray-600' : 'bg-white text-gray-900'\r\n                }`}\r\n              />\r\n              <button\r\n                onClick={searchLocation}\r\n                disabled={loading || !searchQuery.trim()}\r\n                hidden={location !== null}\r\n                className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-blue-300 whitespace-nowrap\"\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n            <div className=\"w-full sm:flex-1 sm:min-w-[200px] flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={flightNumber}\r\n                onChange={(e) => setFlightNumber(e.target.value.toUpperCase())}\r\n                onKeyPress={(e) => e.key === 'Enter' && trackFlight()}\r\n                placeholder=\"Enter flight number (e.g., BA123)\"\r\n                disabled={trackingAllAircraft}\r\n                className={`flex-1 p-2 text-sm sm:text-base border rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  isDarkMode ? 'bg-gray-700 text-white border-gray-600' : 'bg-white text-gray-900'\r\n                } ${trackingAllAircraft ? 'opacity-50' : ''}`}\r\n              />\r\n              <button\r\n                onClick={(e) => trackFlight()}\r\n                disabled={loading || !flightNumber.trim() || trackingAllAircraft}\r\n                className={`px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-purple-600 text-white rounded hover:bg-purple-700 disabled:bg-purple-300 whitespace-nowrap ${\r\n                  trackingAllAircraft ? 'opacity-50' : ''\r\n                }`}\r\n              >\r\n                Track\r\n              </button>\r\n              <button\r\n                onClick={(e) => getAllAircraft(false)}\r\n                disabled={loading || trackingAllAircraft}\r\n                className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-green-300 whitespace-nowrap\"\r\n              >\r\n                All Aircraft\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              {(location || trackingAllAircraft) && (\r\n                <button\r\n                  onClick={clearLocation}\r\n                  disabled={loading}\r\n                  className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-red-600 text-white rounded hover:bg-red-700 disabled:bg-red-300 whitespace-nowrap\"\r\n                >\r\n                  Clear\r\n                </button>\r\n              )}\r\n              {(flightData || trackingAllAircraft) && (\r\n                <button\r\n                  onClick={handleRefreshClick}\r\n                  className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-blue-600 text-white rounded hover:bg-blue-700 whitespace-nowrap\"\r\n                >\r\n                  Refresh\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className={`p-2 sm:p-3 rounded text-xs sm:text-sm ${\r\n              isDarkMode ? 'bg-red-900 text-red-100' : 'bg-red-100 text-red-700'\r\n            }`}>\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          {flightData && (\r\n            <div className={`p-2 sm:p-4 rounded ${\r\n              isDarkMode ? 'bg-blue-900 text-blue-100' : 'bg-blue-100 text-blue-700'\r\n            }`}>\r\n              <div className=\"flex justify-between items-center mb-2 sm:mb-3\">\r\n                <div className=\"font-medium text-base sm:text-lg\">\r\n                 {flightData.flight.number}\r\n                </div>\r\n              </div>\r\n              {displayedDistance !== null && (\r\n                <div className=\"text-center\">\r\n                  <div className={`text-xs sm:text-sm font-medium mb-1 ${\r\n                    isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                  }`}>\r\n                    Distance to Aircraft\r\n                  </div>\r\n                  <div className=\"font-mono text-lg sm:text-2xl font-bold\">\r\n                    {Math.round(displayedDistance).toLocaleString()}m\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"space-y-2 sm:space-y-3\">\r\n                {flightData.live && (\r\n                  <div className=\"grid grid-cols-2 gap-2 sm:gap-4 mt-1 sm:mt-2\">\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Altitude\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{metersToFeet(flightData.live.altitude)}ft</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Speed\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{kmhToKnots(flightData.live.speed_horizontal)}kts</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Direction\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{flightData.live.direction}°</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Status\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{flightData.live.is_ground ? 'On Ground' : 'In Air'}</div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {lastApiCall && (\r\n                  <div className={`text-[10px] sm:text-xs mt-1 sm:mt-2 text-center ${\r\n                    isDarkMode ? 'text-blue-300' : 'text-blue-600'\r\n                  }`}>\r\n                    Using API data from {new Date(lastApiCall).toLocaleString()}\r\n                    <br />\r\n                    <span className=\"italic\">Auto-refreshes every minute, this use a lot of data so recommend using this feature with wifi only</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {trackingAllAircraft && (\r\n            <div className={`p-2 sm:p-4 rounded ${\r\n              isDarkMode ? 'bg-green-900 text-green-100' : 'bg-green-100 text-green-700'\r\n            }`}>\r\n              <div className=\"flex justify-between items-center mb-1 sm:mb-3\">\r\n                <div className=\"font-medium text-base sm:text-lg\">\r\n                  All Aircraft\r\n                </div>\r\n                <div className=\"text-xs sm:text-sm font-mono\">\r\n                  {allAircraft.length} aircraft\r\n                </div>\r\n              </div>\r\n              <div className={`text-[10px] sm:text-xs mt-1 sm:mt-2 text-center ${\r\n                isDarkMode ? 'text-green-300' : 'text-green-600'\r\n              }`}>\r\n                Using API data from {lastApiCall ? new Date(lastApiCall).toLocaleString() : \"N/A\"}\r\n                <br />\r\n                <span className=\"italic\">Auto-refreshes every minute, this use a lot of data so recommend using this feature with wifi only</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={`h-[50vh] sm:h-[60vh] md:h-[600px] rounded border ${\r\n          isDarkMode ? 'bg-gray-700 border-gray-600' : 'bg-gray-50 border-gray-200'\r\n        }`}>\r\n          <MapContainer\r\n            style={{ height: '100%', width: '100%' }}\r\n            center={location ? [location.lat, location.lng] : aircraftPosition ? [aircraftPosition.lat, aircraftPosition.lng] : [51.505, -0.09]}\r\n            zoom={location && !trackingAllAircraft ? 13 : aircraftPosition ? 10 : 6}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              url={isDarkMode \r\n                ? \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n                : \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              }\r\n            />\r\n            {location && (\r\n              <Marker \r\n                position={[location.lat, location.lng]} \r\n              />\r\n            )}\r\n            {aircraftPosition && flightData && !trackingAllAircraft && (\r\n              <>\r\n                <Marker \r\n                  key={`${flightData.flight.number}-${aircraftPosition.lat.toFixed(6)}-${aircraftPosition.lng.toFixed(6)}-${flightData.live.direction || 0}-${Date.now()}`}\r\n                  position={[aircraftPosition.lat, aircraftPosition.lng]} \r\n                  icon={L.divIcon({\r\n                    html: `<div style=\"transform: rotate(${flightData.live.direction || 0}deg)\">\r\n                      <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 24px; height: 24px;\" />\r\n                    </div>`,\r\n                    className: '',\r\n                    iconSize: [24, 24],\r\n                    iconAnchor: [12, 12]\r\n                  })}\r\n                />\r\n                <MapUpdater center={[aircraftPosition.lat, aircraftPosition.lng]} />\r\n              </>\r\n            )}\r\n            {trackingAllAircraft && allAircraft.length > 0 && allAircraft.map(aircraft => (\r\n              <Marker \r\n                key={`${aircraft.icao24}-${aircraft.latitude.toFixed(6)}-${aircraft.longitude.toFixed(6)}`}\r\n                position={[aircraft.latitude, aircraft.longitude]} \r\n                icon={L.divIcon({\r\n                  html: `<div style=\"transform: rotate(${aircraft.direction}deg)\">\r\n                    <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 16px; height: 16px;\" />\r\n                  </div>`,\r\n                  className: '',\r\n                  iconSize: [16, 16],\r\n                  iconAnchor: [8, 8]\r\n                })}\r\n              >\r\n              </Marker>\r\n            ))}\r\n          </MapContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightTracker; ","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletContext } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance, context } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        const { children } = props;\n        return children == null ? null : /*#__PURE__*/ React.createElement(LeafletContext, {\n            value: context\n        }, children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        // biome-ignore lint/correctness/useExhaustiveDependencies: update overlay when children change\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n    const eventHandlersRef = useRef(undefined);\n    useEffect(function addEventHandlers() {\n        if (eventHandlers != null) {\n            element.instance.on(eventHandlers);\n        }\n        eventHandlersRef.current = eventHandlers;\n        return function removeEventHandlers() {\n            if (eventHandlersRef.current != null) {\n                element.instance.off(eventHandlersRef.current);\n            }\n            eventHandlersRef.current = null;\n        };\n    }, [\n        element,\n        eventHandlers\n    ]);\n}\n","import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n    const attributionRef = useRef(attribution);\n    useEffect(function updateAttribution() {\n        if (attribution !== attributionRef.current && map.attributionControl != null) {\n            if (attributionRef.current != null) {\n                map.attributionControl.removeAttribution(attributionRef.current);\n            }\n            if (attribution != null) {\n                map.attributionControl.addAttribution(attribution);\n            }\n        }\n        attributionRef.current = attribution;\n    }, [\n        map,\n        attribution\n    ]);\n}\n","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { useLayerLifecycle } from './layer.js';\nimport { withPane } from './pane.js';\nexport function usePathOptions(element, props) {\n    const optionsRef = useRef(undefined);\n    useEffect(function updatePathOptions() {\n        if (props.pathOptions !== optionsRef.current) {\n            const options = props.pathOptions ?? {};\n            element.instance.setStyle(options);\n            optionsRef.current = options;\n        }\n    }, [\n        element,\n        props\n    ]);\n}\nexport function createPathHook(useElement) {\n    return function usePath(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        usePathOptions(elementRef.current, props);\n        return elementRef;\n    };\n}\n","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component.js';\nimport { createControlHook } from './control.js';\nimport { createDivOverlayHook } from './div-overlay.js';\nimport { createElementHook, createElementObject } from './element.js';\nimport { createLayerHook } from './layer.js';\nimport { createPathHook } from './path.js';\nexport function createControlComponent(createInstance) {\n    function createElement(props, context) {\n        return createElementObject(createInstance(props), context);\n    }\n    const useElement = createElementHook(createElement);\n    const useControl = createControlHook(useElement);\n    return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n    const useElement = createElementHook(createElement);\n    const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n    return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const usePath = createPathHook(useElement);\n    return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createLeafComponent(useLayer);\n}\n","import { LeafletContext, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nfunction MapContainerComponent({ bounds, boundsOptions, center, children, className, id, placeholder, style, whenReady, zoom, ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    const mapInstanceRef = useRef(undefined);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: ref callback\n    const mapRef = useCallback((node)=>{\n        if (node !== null && !mapInstanceRef.current) {\n            const map = new LeafletMap(node, options);\n            mapInstanceRef.current = map;\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletContext, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        ...props,\n        ref: mapRef\n    }, contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n","import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef(undefined);\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef(undefined);\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            updateElement\n        ]);\n        return elementRef;\n    };\n}\n","import { createContext, use } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport function useLeafletContext() {\n    const context = use(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPlaneIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"#ffff00\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22,16v-2l-8.5-5V3.5C13.5,2.67,12.83,2,12,2s-1.5,0.67-1.5,1.5V9L2,14v2l8.5-2.5V19L8,20.5V22l4-1l4,1v-1.5L13.5,19 v-5.5L22,16z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlaneIcon);\nexport default __webpack_public_path__ + \"static/media/plane-icon.5312c99550d9e701054eea554971757c.svg\";\nexport { ForwardRef as ReactComponent };","export function withPane(props, context) {\n    const pane = props.pane ?? context.pane;\n    return pane ? {\n        ...props,\n        pane\n    } : props;\n}\n"],"names":["TileLayer","createTileLayerComponent","_ref","context","url","options","layer","LeafletTileLayer","withPane","createElementObject","props","prevProps","opacity","zIndex","setOpacity","setZIndex","updateGridLayer","setUrl","Marker","createLayerComponent","ctx","position","marker","LeafletMarker","extendContext","overlayContainer","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","calculateInterpolatedPosition","startPos","speed","heading","_startPos$timestamp","now","Date","distance","timestamp","headingRad","Math","PI","lat1","lat","lon1","lng","d","lat2","asin","sin","cos","lon2","atan2","name","calculateDistance","φ1","φ2","Δφ","Δλ","a","c","sqrt","round","MapUpdater","center","map","useMap","useEffect","setView","getZoom","FlightTracker","isDarkMode","useTheme","location","setLocation","useState","aircraftPosition","setAircraftPosition","allAircraft","setAllAircraft","trackingAllAircraft","setTrackingAllAircraft","setDistance","displayedDistance","setDisplayedDistance","error","setError","searchQuery","setSearchQuery","localStorage","getItem","loading","setLoading","flightNumber","setFlightNumber","flightData","setFlightData","lastKnownPosition","setLastKnownPosition","trackingInterval","setTrackingInterval","autoRefreshIntervalRef","useRef","interpolationInterval","setInterpolationInterval","distanceUpdateInterval","setDistanceUpdateInterval","distanceInterpolationInterval","setDistanceInterpolationInterval","lastDrawTime","setLastDrawTime","lastApiCall","setLastApiCall","savedLocation","parsedLocation","JSON","parse","e","console","savedFlightNumber","log","setTimeout","trackFlight","setItem","removeItem","stringify","clearInterval","current","newDistance","interval","setInterval","currentDistance","live","distanceInterpolation","is_ground","speed_horizontal","newPos","direction","airline","flight","number","diff","abs","step","sign","min","max","timer","prev","clearTimeout","searchLocation","async","trim","response","fetch","encodeURIComponent","ok","Error","data","json","length","newLocation","parseFloat","lon","display_name","err","message","updateInterpolatedPosition","useCallback","resetAllTrackingState","sessionStorage","clearAutoRefreshInterval","forceRefresh","arguments","undefined","_flightState$","padEnd","status","states","flightState","find","state","includes","toUpperCase","callsignFromApi","longitude","latitude","altitude","isOnGround","velocity","verticalRate","iata","departure","airport","timezone","arrival","speed_vertical","Boolean","updated","toISOString","apiTimestamp","toString","newPosition","toLocaleTimeString","getAllAircraft","isAutoRefresh","aircraftData","filter","isNaN","_state$","icao24","callsign","centralAircraft","floor","interpolation","_jsx","className","children","_jsxs","type","value","onChange","target","onKeyPress","key","hidden","placeholder","onClick","disabled","clearLocation","event","preventDefault","toLocaleString","meters","kmh","MapContainer","style","height","width","zoom","scrollWheelZoom","attribution","_Fragment","html","planeIcon","iconSize","iconAnchor","toFixed","aircraft","createContainerComponent","useElement","ContainerComponent","forwardedRef","instance","useImperativeHandle","React","LeafletContext","forwardRef","useEventHandlers","element","eventHandlers","eventHandlersRef","on","off","useLayerLifecycle","layerContainer","addLayer","removeLayer","createLayerHook","useLeafletContext","elementRef","attributionRef","attributionControl","removeAttribution","addAttribution","useAttribution","createPathHook","optionsRef","pathOptions","setStyle","usePathOptions","createElement","updateElement","createElementHook","createPathComponent","LeafComponent","createLeafComponent","MapContainerComponent","bounds","boundsOptions","id","whenReady","setContext","mapInstanceRef","mapRef","node","LeafletMap","fitBounds","createLeafletContext","remove","contents","ref","useMapEvents","handlers","container","Object","freeze","propsRef","CONTEXT_VERSION","__version","source","extra","createContext","use","pane"],"sourceRoot":""}