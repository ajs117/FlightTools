{"version":3,"file":"static/js/595.08131e63.chunk.js","mappings":"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","sources":["../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","components/InFlightTracker.tsx","../node_modules/leaflet.offline/dist/bundle.js","plane-icon.svg"],"sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet.offline';\r\nimport planeIcon from '../plane-icon.svg';\r\n\r\n// Fix for default markers\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\ninterface FlightData {\r\n  latitude: number | null;\r\n  longitude: number | null;\r\n  altitude: number | null;\r\n  speed: number | null;\r\n  heading: number | null;\r\n  lastUpdate: Date;\r\n  gpsAccuracy: number | null;\r\n}\r\n\r\n// Conversion functions\r\nconst metersToFeet = (meters: number): number => {\r\n  return Math.round(meters * 3.28084);\r\n};\r\n\r\nconst kmhToKnots = (kmh: number): number => {\r\n  return Math.round(kmh * 0.539957);\r\n};\r\n\r\nconst InFlightTracker: React.FC = () => {\r\n  const { isDarkMode } = useTheme();\r\n  const [flightData, setFlightData] = useState<FlightData>({\r\n    latitude: null,\r\n    longitude: null,\r\n    altitude: null,\r\n    speed: null,\r\n    heading: null,\r\n    lastUpdate: new Date(),\r\n    gpsAccuracy: null,\r\n  });\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isGpsAvailable, setIsGpsAvailable] = useState<boolean>(true);\r\n  const mapRef = useRef<L.Map | null>(null);\r\n  const markerRef = useRef<L.Marker | null>(null);\r\n  const accuracyCircleRef = useRef<L.Circle | null>(null);\r\n  const watchId = useRef<number | null>(null);\r\n  const lastKnownPosition = useRef<GeolocationPosition | null>(null);\r\n  const tileLayerRef = useRef<L.TileLayer.Offline | null>(null);\r\n\r\n  // Function to pre-cache tiles\r\n  const precacheTiles = async () => {\r\n    if (!mapRef.current) return;\r\n\r\n    const tileLayer = tileLayerRef.current;\r\n    if (!tileLayer) return;\r\n\r\n    const tileLayerOffline = L.tileLayer.offline('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '© OpenStreetMap contributors',\r\n      subdomains: 'abc',\r\n      minZoom: 0,\r\n      maxZoom: 5, // Cache up to zoom level 5\r\n    });\r\n\r\n    // Replace the existing tile layer with the offline version\r\n    tileLayerOffline.addTo(mapRef.current);\r\n    if (tileLayer) {\r\n      mapRef.current.removeLayer(tileLayer);\r\n    }\r\n    tileLayerRef.current = tileLayerOffline;\r\n\r\n    // Start pre-caching tiles\r\n    const bounds = mapRef.current.getBounds();\r\n    const zoom = 5; // Maximum zoom level to cache\r\n    const tileUrls = tileLayerOffline.getTileUrls(bounds, zoom);\r\n    \r\n    try {\r\n      await tileLayerOffline.preCache(tileUrls);\r\n      console.log('Tiles pre-cached successfully');\r\n    } catch (err) {\r\n      console.error('Error pre-caching tiles:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initialize map\r\n    if (!mapRef.current) {\r\n      mapRef.current = L.map('map').setView([0, 0], 2);\r\n      const tileLayer = L.tileLayer.offline('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors',\r\n        subdomains: 'abc',\r\n        minZoom: 0,\r\n        maxZoom: 5,\r\n      }).addTo(mapRef.current);\r\n      tileLayerRef.current = tileLayer;\r\n\r\n      // Start pre-caching tiles\r\n      precacheTiles();\r\n    }\r\n\r\n    // Check if GPS is available\r\n    if (!navigator.geolocation) {\r\n      setIsGpsAvailable(false);\r\n      setError('GPS is not available on this device');\r\n      return;\r\n    }\r\n\r\n    const startTracking = async () => {\r\n      try {\r\n        watchId.current = navigator.geolocation.watchPosition(\r\n          (position) => {\r\n            lastKnownPosition.current = position;\r\n            const newData = {\r\n              latitude: position.coords.latitude,\r\n              longitude: position.coords.longitude,\r\n              altitude: position.coords.altitude,\r\n              speed: position.coords.speed,\r\n              heading: position.coords.heading,\r\n              lastUpdate: new Date(),\r\n              gpsAccuracy: position.coords.accuracy,\r\n            };\r\n            setFlightData(newData);\r\n            setError(null);\r\n\r\n            // Update map with new position\r\n            if (mapRef.current && newData.latitude && newData.longitude) {\r\n              const latLng = L.latLng(newData.latitude, newData.longitude);\r\n              \r\n              // Update or create marker\r\n              if (!markerRef.current) {\r\n                markerRef.current = L.marker(latLng, {\r\n                  icon: L.divIcon({\r\n                    html: `<div style=\"transform: rotate(${newData.heading || 0}deg)\">\r\n                      <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 24px; height: 24px;\" />\r\n                    </div>`,\r\n                    className: '',\r\n                    iconSize: [24, 24],\r\n                    iconAnchor: [12, 12]\r\n                  })\r\n                }).addTo(mapRef.current);\r\n              } else {\r\n                markerRef.current.setLatLng(latLng);\r\n                markerRef.current.setIcon(L.divIcon({\r\n                  html: `<div style=\"transform: rotate(${newData.heading || 0}deg)\">\r\n                    <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 24px; height: 24px;\" />\r\n                  </div>`,\r\n                  className: '',\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [12, 12]\r\n                }));\r\n              }\r\n\r\n              // Update or create accuracy circle\r\n              if (!accuracyCircleRef.current) {\r\n                accuracyCircleRef.current = L.circle(latLng, {\r\n                  radius: newData.gpsAccuracy || 0,\r\n                  color: isDarkMode ? '#60a5fa' : '#3b82f6',\r\n                  fillColor: isDarkMode ? '#60a5fa' : '#3b82f6',\r\n                  fillOpacity: 0.2,\r\n                  weight: 1\r\n                }).addTo(mapRef.current);\r\n              } else {\r\n                accuracyCircleRef.current.setLatLng(latLng);\r\n                accuracyCircleRef.current.setRadius(newData.gpsAccuracy || 0);\r\n              }\r\n\r\n              // Center map on position\r\n              mapRef.current.setView(latLng, mapRef.current.getZoom());\r\n            }\r\n          },\r\n          (error) => {\r\n            console.warn('GPS Error:', error);\r\n            setError(`GPS Error: ${error.message}`);\r\n            \r\n            // Keep using last known position if available\r\n            if (lastKnownPosition.current) {\r\n              const newData = {\r\n                latitude: lastKnownPosition.current.coords.latitude,\r\n                longitude: lastKnownPosition.current.coords.longitude,\r\n                altitude: lastKnownPosition.current.coords.altitude,\r\n                speed: lastKnownPosition.current.coords.speed,\r\n                heading: lastKnownPosition.current.coords.heading,\r\n                lastUpdate: new Date(),\r\n                gpsAccuracy: lastKnownPosition.current.coords.accuracy,\r\n              };\r\n              setFlightData(newData);\r\n\r\n              // Update map with last known position\r\n              if (mapRef.current && newData.latitude && newData.longitude) {\r\n                const latLng = L.latLng(newData.latitude, newData.longitude);\r\n                if (markerRef.current) {\r\n                  markerRef.current.setLatLng(latLng);\r\n                  markerRef.current.setIcon(L.divIcon({\r\n                    html: `<div style=\"transform: rotate(${newData.heading || 0}deg)\">\r\n                      <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 24px; height: 24px;\" />\r\n                    </div>`,\r\n                    className: '',\r\n                    iconSize: [24, 24],\r\n                    iconAnchor: [12, 12]\r\n                  }));\r\n                }\r\n                if (accuracyCircleRef.current) {\r\n                  accuracyCircleRef.current.setLatLng(latLng);\r\n                  accuracyCircleRef.current.setRadius(newData.gpsAccuracy || 0);\r\n                }\r\n              }\r\n            }\r\n          },\r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0,\r\n          }\r\n        );\r\n      } catch (err) {\r\n        setError('Failed to start GPS tracking');\r\n        console.error('GPS Error:', err);\r\n      }\r\n    };\r\n\r\n    startTracking();\r\n\r\n    return () => {\r\n      if (watchId.current !== null) {\r\n        navigator.geolocation.clearWatch(watchId.current);\r\n      }\r\n      if (mapRef.current) {\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n    };\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <div className={`p-4 ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\r\n      <h2 className=\"text-2xl font-bold mb-4\">In-Flight Tracker</h2>\r\n      \r\n      {!isGpsAvailable && (\r\n        <div className={`p-4 rounded-lg mb-4 ${isDarkMode ? 'bg-red-900 text-red-200' : 'bg-red-100 text-red-800'}`}>\r\n          GPS is not available on this device. This tool requires GPS functionality to work.\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className={`p-4 rounded-lg mb-4 ${isDarkMode ? 'bg-yellow-900 text-yellow-200' : 'bg-yellow-100 text-yellow-800'}`}>\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n        <div className={`p-4 rounded-lg ${isDarkMode ? 'bg-gray-800' : 'bg-white'} shadow`}>\r\n          <h3 className=\"text-lg font-semibold mb-2\">Current Position</h3>\r\n          <div className=\"space-y-2\">\r\n            <p>Latitude: {flightData.latitude?.toFixed(6) || 'N/A'}</p>\r\n            <p>Longitude: {flightData.longitude?.toFixed(6) || 'N/A'}</p>\r\n            <p>Altitude: {flightData.altitude ? `${Math.round(flightData.altitude)}m` : 'N/A'}</p>\r\n            <p>Speed: {flightData.speed ? `${kmhToKnots(Math.round(flightData.speed * 3.6))} knots` : 'N/A'}</p>\r\n            <p>Heading: {flightData.heading ? `${Math.round(flightData.heading)}°` : 'N/A'}</p>\r\n            <p>GPS Accuracy: {flightData.gpsAccuracy ? `±${metersToFeet(Math.round(flightData.gpsAccuracy))}ft` : 'N/A'}</p>\r\n            <p>Last Update: {flightData.lastUpdate.toLocaleTimeString()}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`p-4 rounded-lg ${isDarkMode ? 'bg-gray-800' : 'bg-white'} shadow`}>\r\n          <h3 className=\"text-lg font-semibold mb-2\">Map View</h3>\r\n          <div id=\"map\" className=\"w-full h-64 rounded-lg\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InFlightTracker; ","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('leaflet'), require('idb')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'leaflet', 'idb'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.LeafletOffline = {}, global.L, global.idb));\n})(this, (function (exports, leaflet, idb) { 'use strict';\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\n\n    /**\n     * Api methods used in control and layer\n     * For advanced usage\n     *\n     * @module TileManager\n     *\n     */\n    const tileStoreName = 'tileStore';\n    const urlTemplateIndex = 'urlTemplate';\n    let dbPromise;\n    function openTilesDataBase() {\n        if (dbPromise) {\n            return dbPromise;\n        }\n        dbPromise = idb.openDB('leaflet.offline', 2, {\n            upgrade(db, oldVersion) {\n                idb.deleteDB('leaflet_offline');\n                idb.deleteDB('leaflet_offline_areas');\n                if (oldVersion < 1) {\n                    const tileStore = db.createObjectStore(tileStoreName, {\n                        keyPath: 'key',\n                    });\n                    tileStore.createIndex(urlTemplateIndex, 'urlTemplate');\n                    tileStore.createIndex('z', 'z');\n                }\n            },\n        });\n        return dbPromise;\n    }\n    /**\n     * @example\n     * ```js\n     * import { getStorageLength } from 'leaflet.offline'\n     * getStorageLength().then(i => console.log(i + 'tiles in storage'))\n     * ```\n     */\n    function getStorageLength() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield openTilesDataBase();\n            return db.count(tileStoreName);\n        });\n    }\n    /**\n     * @example\n     * ```js\n     * import { getStorageInfo } from 'leaflet.offline'\n     * getStorageInfo('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png')\n     * ```\n     */\n    function getStorageInfo(urlTemplate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const range = IDBKeyRange.only(urlTemplate);\n            const db = yield openTilesDataBase();\n            return db.getAllFromIndex(tileStoreName, urlTemplateIndex, range);\n        });\n    }\n    /**\n     * @example\n     * ```js\n     * import { downloadTile } from 'leaflet.offline'\n     * downloadTile(tileInfo.url).then(blob => saveTile(tileInfo, blob))\n     * ```\n     */\n    function downloadTile(tileUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(tileUrl);\n            if (!response.ok) {\n                throw new Error(`Request failed with status ${response.statusText}`);\n            }\n            return response.blob();\n        });\n    }\n    /**\n     * @example\n     * ```js\n     * saveTile(tileInfo, blob).then(() => console.log(`saved tile from ${tileInfo.url}`))\n     * ```\n     */\n    function saveTile(tileInfo, blob) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield openTilesDataBase();\n            return db.put(tileStoreName, Object.assign({ blob }, tileInfo));\n        });\n    }\n    function getTileUrl(urlTemplate, data) {\n        return leaflet.Util.template(urlTemplate, Object.assign(Object.assign({}, data), { r: leaflet.Browser.retina ? '@2x' : '' }));\n    }\n    function getTilePoints(area, tileSize) {\n        const points = [];\n        if (!area.min || !area.max) {\n            return points;\n        }\n        const topLeftTile = area.min.divideBy(tileSize.x).floor();\n        const bottomRightTile = area.max.divideBy(tileSize.x).floor();\n        for (let j = topLeftTile.y; j <= bottomRightTile.y; j += 1) {\n            for (let i = topLeftTile.x; i <= bottomRightTile.x; i += 1) {\n                points.push(new leaflet.Point(i, j));\n            }\n        }\n        return points;\n    }\n    /**\n     * Get a geojson of tiles from one resource\n     *\n     * @example\n     * const urlTemplate = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n     * const getGeoJsonData = () => LeafletOffline.getStorageInfo(urlTemplate)\n     *  .then((data) => LeafletOffline.getStoredTilesAsJson(baseLayer, data));\n     *\n     * getGeoJsonData().then((geojson) => {\n     *   storageLayer = L.geoJSON(geojson).bindPopup(\n     *     (clickedLayer) => clickedLayer.feature.properties.key,\n     *   );\n     * });\n     *\n     */\n    function getStoredTilesAsJson(tileSize, tiles) {\n        const featureCollection = {\n            type: 'FeatureCollection',\n            features: [],\n        };\n        for (let i = 0; i < tiles.length; i += 1) {\n            const topLeftPoint = new leaflet.Point(tiles[i].x * tileSize.x, tiles[i].y * tileSize.y);\n            const bottomRightPoint = new leaflet.Point(topLeftPoint.x + tileSize.x, topLeftPoint.y + tileSize.y);\n            const topLeftlatlng = leaflet.CRS.EPSG3857.pointToLatLng(topLeftPoint, tiles[i].z);\n            const botRightlatlng = leaflet.CRS.EPSG3857.pointToLatLng(bottomRightPoint, tiles[i].z);\n            featureCollection.features.push({\n                type: 'Feature',\n                properties: tiles[i],\n                geometry: {\n                    type: 'Polygon',\n                    coordinates: [\n                        [\n                            [topLeftlatlng.lng, topLeftlatlng.lat],\n                            [botRightlatlng.lng, topLeftlatlng.lat],\n                            [botRightlatlng.lng, botRightlatlng.lat],\n                            [topLeftlatlng.lng, botRightlatlng.lat],\n                            [topLeftlatlng.lng, topLeftlatlng.lat],\n                        ],\n                    ],\n                },\n            });\n        }\n        return featureCollection;\n    }\n    /**\n     * Remove tile by key\n     */\n    function removeTile(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield openTilesDataBase();\n            return db.delete(tileStoreName, key);\n        });\n    }\n    /**\n     * Get single tile blob\n     */\n    function getBlobByKey(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield openTilesDataBase())\n                .get(tileStoreName, key)\n                .then((result) => result && result.blob);\n        });\n    }\n    function hasTile(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield openTilesDataBase();\n            const result = yield db.getKey(tileStoreName, key);\n            return result !== undefined;\n        });\n    }\n    /**\n     * Remove everything\n     */\n    function truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield openTilesDataBase()).clear(tileStoreName);\n        });\n    }\n    function getTileImageSource(key, url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const shouldUseUrl = !(yield hasTile(key));\n            if (shouldUseUrl) {\n                return url;\n            }\n            const blob = yield getBlobByKey(key);\n            return URL.createObjectURL(blob);\n        });\n    }\n\n    class TileLayerOffline extends leaflet.TileLayer {\n        createTile(coords, done) {\n            const tile = document.createElement('img');\n            leaflet.DomEvent.on(tile, 'load', leaflet.Util.bind(this._tileOnLoad, this, done, tile));\n            leaflet.DomEvent.on(tile, 'error', leaflet.Util.bind(this._tileOnError, this, done, tile));\n            if (this.options.crossOrigin || this.options.crossOrigin === '') {\n                tile.crossOrigin =\n                    this.options.crossOrigin === true ? '' : this.options.crossOrigin;\n            }\n            tile.alt = '';\n            tile.setAttribute('role', 'presentation');\n            getTileImageSource(this._getStorageKey(coords), this.getTileUrl(coords)).then((src) => (tile.src = src));\n            return tile;\n        }\n        /**\n         * get key to use for storage\n         * @private\n         * @param  {string} url url used to load tile\n         * @return {string} unique identifier.\n         */\n        _getStorageKey(coords) {\n            return getTileUrl(this._url, Object.assign(Object.assign(Object.assign({}, coords), this.options), { \n                // @ts-ignore: Possibly undefined\n                s: this.options.subdomains['0'] }));\n        }\n        /**\n         * Get tileinfo for zoomlevel & bounds\n         */\n        getTileUrls(bounds, zoom) {\n            var _a;\n            const tiles = [];\n            const tilePoints = getTilePoints(bounds, this.getTileSize());\n            for (let index = 0; index < tilePoints.length; index += 1) {\n                const tilePoint = tilePoints[index];\n                const data = Object.assign(Object.assign({}, this.options), { x: tilePoint.x, y: tilePoint.y, z: zoom + (this.options.zoomOffset || 0) });\n                tiles.push({\n                    key: getTileUrl(this._url, Object.assign(Object.assign({}, data), { s: (_a = this.options.subdomains) === null || _a === void 0 ? void 0 : _a[0] })),\n                    url: getTileUrl(this._url, Object.assign(Object.assign({}, data), { \n                        // @ts-ignore: Undefined\n                        s: this._getSubdomain(tilePoint) })),\n                    z: zoom,\n                    x: tilePoint.x,\n                    y: tilePoint.y,\n                    urlTemplate: this._url,\n                    createdAt: Date.now(),\n                });\n            }\n            return tiles;\n        }\n    }\n    function tileLayerOffline(url, options) {\n        return new TileLayerOffline(url, options);\n    }\n    /**  @ts-ignore */\n    if (window.L) {\n        /**  @ts-ignore */\n        window.L.tileLayer.offline = tileLayerOffline;\n    }\n\n    class ControlSaveTiles extends leaflet.Control {\n        constructor(baseLayer, options) {\n            super(options);\n            this.status = {\n                storagesize: 0,\n                lengthToBeSaved: 0,\n                lengthSaved: 0,\n                lengthLoaded: 0,\n                _tilesforSave: [],\n            };\n            this._baseLayer = baseLayer;\n            this.setStorageSize();\n            this.options = Object.assign({\n                position: 'topleft',\n                saveText: '+',\n                rmText: '-',\n                maxZoom: 19,\n                saveWhatYouSee: false,\n                bounds: null,\n                confirm: null,\n                confirmRemoval: null,\n                parallel: 50,\n                zoomlevels: undefined,\n                alwaysDownload: true,\n            }, options);\n        }\n        setStorageSize() {\n            if (this.status.storagesize) {\n                return Promise.resolve(this.status.storagesize);\n            }\n            return getStorageLength()\n                .then((numberOfKeys) => {\n                this.status.storagesize = numberOfKeys;\n                this._baseLayer.fire('storagesize', this.status);\n                return numberOfKeys;\n            })\n                .catch(() => 0);\n        }\n        getStorageSize(callback) {\n            this.setStorageSize().then((result) => {\n                if (callback) {\n                    callback(result);\n                }\n            });\n        }\n        setLayer(layer) {\n            this._baseLayer = layer;\n        }\n        onAdd() {\n            const container = leaflet.DomUtil.create('div', 'savetiles leaflet-bar');\n            const { options } = this;\n            this._createButton(options.saveText, 'savetiles', container, this._saveTiles);\n            this._createButton(options.rmText, 'rmtiles', container, this._rmTiles);\n            return container;\n        }\n        _createButton(html, className, container, fn) {\n            const link = leaflet.DomUtil.create('a', className, container);\n            link.innerHTML = html;\n            link.href = '#';\n            link.ariaRoleDescription = 'button';\n            leaflet.DomEvent.on(link, 'mousedown dblclick', leaflet.DomEvent.stopPropagation)\n                .on(link, 'click', leaflet.DomEvent.stop)\n                .on(link, 'click', fn, this)\n                .on(link, 'click', this._refocusOnMap, this);\n            return link;\n        }\n        _saveTiles() {\n            const tiles = this._calculateTiles();\n            this._resetStatus(tiles);\n            const successCallback = () => __awaiter(this, void 0, void 0, function* () {\n                this._baseLayer.fire('savestart', this.status);\n                const loader = () => __awaiter(this, void 0, void 0, function* () {\n                    const tile = tiles.shift();\n                    if (tile === undefined) {\n                        return Promise.resolve();\n                    }\n                    const blob = yield this._loadTile(tile);\n                    if (blob) {\n                        yield this._saveTile(tile, blob);\n                    }\n                    return loader();\n                });\n                const parallel = Math.min(tiles.length, this.options.parallel);\n                for (let i = 0; i < parallel; i += 1) {\n                    loader();\n                }\n            });\n            if (this.options.confirm) {\n                this.options.confirm(this.status, successCallback);\n            }\n            else {\n                successCallback();\n            }\n        }\n        _calculateTiles() {\n            let tiles = [];\n            // minimum zoom to prevent the user from saving the whole world\n            const minZoom = 5;\n            // current zoom or zoom options\n            let zoomlevels = [];\n            if (this.options.saveWhatYouSee) {\n                const currentZoom = this._map.getZoom();\n                if (currentZoom < minZoom) {\n                    throw new Error(`It's not possible to save with zoom below level ${minZoom}.`);\n                }\n                const { maxZoom } = this.options;\n                for (let zoom = currentZoom; zoom <= maxZoom; zoom += 1) {\n                    zoomlevels.push(zoom);\n                }\n            }\n            else {\n                zoomlevels = this.options.zoomlevels || [this._map.getZoom()];\n            }\n            const latlngBounds = this.options.bounds || this._map.getBounds();\n            for (let i = 0; i < zoomlevels.length; i += 1) {\n                const area = leaflet.bounds(this._map.project(latlngBounds.getNorthWest(), zoomlevels[i]), this._map.project(latlngBounds.getSouthEast(), zoomlevels[i]));\n                tiles = tiles.concat(this._baseLayer.getTileUrls(area, zoomlevels[i]));\n            }\n            return tiles;\n        }\n        _resetStatus(tiles) {\n            this.status = {\n                lengthLoaded: 0,\n                lengthToBeSaved: tiles.length,\n                lengthSaved: 0,\n                _tilesforSave: tiles,\n                storagesize: this.status.storagesize,\n            };\n        }\n        _loadTile(tile) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let blob;\n                if (this.options.alwaysDownload === true ||\n                    (yield hasTile(tile.key)) === false) {\n                    blob = yield downloadTile(tile.url);\n                    this.status.lengthLoaded += 1;\n                }\n                this.status.lengthLoaded += 1;\n                this._baseLayer.fire('loadtileend', this.status);\n                if (this.status.lengthLoaded === this.status.lengthToBeSaved) {\n                    this._baseLayer.fire('loadend', this.status);\n                }\n                return blob;\n            });\n        }\n        _saveTile(tile, blob) {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield saveTile(tile, blob);\n                this.status.lengthSaved += 1;\n                this._baseLayer.fire('savetileend', this.status);\n                if (this.status.lengthSaved === this.status.lengthToBeSaved) {\n                    this._baseLayer.fire('saveend', this.status);\n                    this.setStorageSize();\n                }\n            });\n        }\n        _rmTiles() {\n            const successCallback = () => {\n                truncate().then(() => {\n                    this.status.storagesize = 0;\n                    this._baseLayer.fire('tilesremoved');\n                    this._baseLayer.fire('storagesize', this.status);\n                });\n            };\n            if (this.options.confirmRemoval) {\n                this.options.confirmRemoval(this.status, successCallback);\n            }\n            else {\n                successCallback();\n            }\n        }\n    }\n    function savetiles(baseLayer, options) {\n        return new ControlSaveTiles(baseLayer, options);\n    }\n    /**  @ts-ignore */\n    if (window.L) {\n        /**  @ts-ignore */\n        window.L.control.savetiles = savetiles;\n    }\n\n    exports.downloadTile = downloadTile;\n    exports.getBlobByKey = getBlobByKey;\n    exports.getStorageInfo = getStorageInfo;\n    exports.getStorageLength = getStorageLength;\n    exports.getStoredTilesAsJson = getStoredTilesAsJson;\n    exports.getTileImageSource = getTileImageSource;\n    exports.getTilePoints = getTilePoints;\n    exports.getTileUrl = getTileUrl;\n    exports.hasTile = hasTile;\n    exports.removeTile = removeTile;\n    exports.saveTile = saveTile;\n    exports.savetiles = savetiles;\n    exports.tileLayerOffline = tileLayerOffline;\n    exports.truncate = truncate;\n\n}));\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPlaneIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"#ffff00\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22,16v-2l-8.5-5V3.5C13.5,2.67,12.83,2,12,2s-1.5,0.67-1.5,1.5V9L2,14v2l8.5-2.5V19L8,20.5V22l4-1l4,1v-1.5L13.5,19 v-5.5L22,16z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlaneIcon);\nexport default __webpack_public_path__ + \"static/media/plane-icon.5312c99550d9e701054eea554971757c.svg\";\nexport { ForwardRef as ReactComponent };"],"names":["instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","prop","receiver","IDBTransaction","objectStoreNames","undefined","objectStore","wrap","set","value","has","wrapFunction","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","_len2","arguments","length","args","Array","_key2","apply","unwrap","this","_len3","_key3","storeNames","_len","_key","tx","call","sort","transformCachableValue","done","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","promise","success","result","then","catch","promisifyRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","store","index","shift","all","oldTraps","callback","L","Default","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","InFlightTracker","_flightData$latitude","_flightData$longitude","isDarkMode","useTheme","flightData","setFlightData","useState","latitude","longitude","altitude","speed","heading","lastUpdate","Date","gpsAccuracy","setError","isGpsAvailable","setIsGpsAvailable","mapRef","useRef","markerRef","accuracyCircleRef","watchId","lastKnownPosition","tileLayerRef","useEffect","current","setView","tileLayer","offline","attribution","subdomains","minZoom","maxZoom","addTo","tileLayerOffline","removeLayer","bounds","getBounds","tileUrls","getTileUrls","preCache","console","log","err","precacheTiles","navigator","geolocation","watchPosition","position","newData","coords","accuracy","latLng","setLatLng","setIcon","html","planeIcon","className","iconSize","iconAnchor","icon","setRadius","radius","color","fillColor","fillOpacity","weight","getZoom","warn","message","enableHighAccuracy","timeout","maximumAge","startTracking","clearWatch","remove","_jsxs","children","_jsx","toFixed","Math","round","kmh","meters","toLocaleTimeString","id","exports","leaflet","idb","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","next","e","rejected","tileStoreName","urlTemplateIndex","dbPromise","openTilesDataBase","tileStore","createObjectStore","keyPath","createIndex","getStorageLength","count","getStorageInfo","urlTemplate","range","IDBKeyRange","only","getAllFromIndex","downloadTile","tileUrl","response","fetch","ok","Error","statusText","blob","saveTile","tileInfo","put","Object","assign","getTileUrl","data","Util","template","r","Browser","retina","getTilePoints","area","tileSize","points","min","max","topLeftTile","divideBy","x","floor","bottomRightTile","j","y","i","push","Point","getStoredTilesAsJson","tiles","featureCollection","type","features","topLeftPoint","bottomRightPoint","topLeftlatlng","CRS","EPSG3857","pointToLatLng","z","botRightlatlng","properties","geometry","coordinates","lng","lat","removeTile","key","delete","getBlobByKey","hasTile","getKey","truncate","clear","getTileImageSource","url","URL","createObjectURL","TileLayerOffline","TileLayer","createTile","tile","document","createElement","DomEvent","on","bind","_tileOnLoad","_tileOnError","options","crossOrigin","alt","setAttribute","_getStorageKey","src","_url","s","zoom","_a","tilePoints","getTileSize","tilePoint","zoomOffset","_getSubdomain","createdAt","now","window","ControlSaveTiles","Control","constructor","baseLayer","super","status","storagesize","lengthToBeSaved","lengthSaved","lengthLoaded","_tilesforSave","_baseLayer","setStorageSize","saveText","rmText","saveWhatYouSee","confirm","confirmRemoval","parallel","zoomlevels","alwaysDownload","numberOfKeys","fire","getStorageSize","setLayer","layer","onAdd","container","DomUtil","create","_createButton","_saveTiles","_rmTiles","fn","link","innerHTML","href","ariaRoleDescription","stopPropagation","stop","_refocusOnMap","_calculateTiles","_resetStatus","successCallback","loader","_loadTile","_saveTile","currentZoom","_map","latlngBounds","project","getNorthWest","getSouthEast","concat","savetiles","control","factory"],"sourceRoot":""}