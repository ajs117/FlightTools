{"version":3,"file":"static/js/216.33689c24.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/TileLayer.js","../node_modules/@react-leaflet/core/lib/grid-layer.js","../node_modules/react-leaflet/lib/Marker.js","components/FlightTracker.tsx","../node_modules/@react-leaflet/core/lib/component.js","../node_modules/@react-leaflet/core/lib/events.js","../node_modules/@react-leaflet/core/lib/layer.js","../node_modules/@react-leaflet/core/lib/attribution.js","../node_modules/@react-leaflet/core/lib/path.js","../node_modules/@react-leaflet/core/lib/generic.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/hooks.js","../node_modules/@react-leaflet/core/lib/element.js","../node_modules/@react-leaflet/core/lib/context.js","plane-icon.svg","../node_modules/@react-leaflet/core/lib/pane.js"],"sourcesContent":["import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url, ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n","export function updateGridLayer(layer, props, prevProps) {\n    const { opacity, zIndex } = props;\n    if (opacity != null && opacity !== prevProps.opacity) {\n        layer.setOpacity(opacity);\n    }\n    if (zIndex != null && zIndex !== prevProps.zIndex) {\n        layer.setZIndex(zIndex);\n    }\n}\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position, ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport planeIcon from '../plane-icon.svg';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\n// Fix for default markers\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\ninterface Location {\r\n  lat: number;\r\n  lng: number;\r\n  name?: string;\r\n}\r\n\r\ninterface FlightData {\r\n  flight: {\r\n    number: string;\r\n    iata: string;\r\n  };\r\n  departure: {\r\n    airport: string;\r\n    timezone: string;\r\n  };\r\n  arrival: {\r\n    airport: string;\r\n    timezone: string;\r\n  };\r\n  airline: {\r\n    name: string;\r\n  };\r\n  live: {\r\n    latitude: number;\r\n    longitude: number;\r\n    altitude: number;\r\n    direction: number;\r\n    speed_horizontal: number;\r\n    speed_vertical: number;\r\n    is_ground: boolean;\r\n    updated: string;\r\n  };\r\n}\r\n\r\ninterface InterpolatedPosition {\r\n  lat: number;\r\n  lng: number;\r\n  name: string;\r\n  timestamp?: number;\r\n}\r\n\r\ninterface CachedFlightData {\r\n  data: any;\r\n  timestamp: number;\r\n}\r\n\r\n// Conversion functions\r\nconst metersToFeet = (meters: number): number => {\r\n  return Math.round(meters * 3.28084);\r\n};\r\n\r\nconst kmhToKnots = (kmh: number): number => {\r\n  return Math.round(kmh * 0.539957);\r\n};\r\n\r\n// Calculate interpolated position based on speed and heading\r\nconst calculateInterpolatedPosition = (startPos: InterpolatedPosition, speed: number, heading: number): InterpolatedPosition => {\r\n  const now = Date.now();\r\n  const timeDiff = (now - (startPos.timestamp ?? now)) / 1000; // Convert to seconds\r\n  const distance = (speed * timeDiff) / 3600; // Convert km/h to km\r\n\r\n  // Convert heading to radians\r\n  const headingRad = (heading * Math.PI) / 180;\r\n  \r\n  // Calculate new position using great circle formula\r\n  const lat1 = startPos.lat * Math.PI / 180;\r\n  const lon1 = startPos.lng * Math.PI / 180;\r\n  const d = distance / 6371; // Earth's radius in km\r\n\r\n  const lat2 = Math.asin(\r\n    Math.sin(lat1) * Math.cos(d) +\r\n    Math.cos(lat1) * Math.sin(d) * Math.cos(headingRad)\r\n  );\r\n\r\n  const lon2 = lon1 + Math.atan2(\r\n    Math.sin(headingRad) * Math.sin(d) * Math.cos(lat1),\r\n    Math.cos(d) - Math.sin(lat1) * Math.sin(lat2)\r\n  );\r\n\r\n  return {\r\n    lat: lat2 * 180 / Math.PI,\r\n    lng: lon2 * 180 / Math.PI,\r\n    timestamp: now,\r\n    name: startPos.name // Add the required 'name' property from the input position\r\n  };\r\n};\r\n\r\n// Calculate distance between two points using Haversine formula\r\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\r\n  const R = 6371e3; // Earth's radius in meters\r\n  const φ1 = lat1 * Math.PI / 180;\r\n  const φ2 = lat2 * Math.PI / 180;\r\n  const Δφ = (lat2 - lat1) * Math.PI / 180;\r\n  const Δλ = (lon2 - lon1) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return Math.round(R * c); // Distance in meters\r\n};\r\n\r\n// Component to handle map updates\r\nconst MapUpdater = ({ center }: { center: [number, number] }) => {\r\n  const map = useMap();\r\n  \r\n  useEffect(() => {\r\n    map.setView(center, map.getZoom());\r\n  }, [center, map]);\r\n  \r\n  return null;\r\n};\r\n\r\nconst FlightTracker: React.FC = () => {\r\n  const { isDarkMode } = useTheme();\r\n  const [location, setLocation] = useState<Location | null>(() => {\r\n    const savedLocation = localStorage.getItem('lastLocation');\r\n    return savedLocation ? JSON.parse(savedLocation) : null;\r\n  });\r\n  const [aircraftPosition, setAircraftPosition] = useState<Location | null>(null);\r\n  const [distance, setDistance] = useState<number | null>(null);\r\n  const [displayedDistance, setDisplayedDistance] = useState<number | null>(null);\r\n  const [error, setError] = useState<string>('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [flightNumber, setFlightNumber] = useState('');\r\n  const [flightData, setFlightData] = useState<FlightData | null>(() => {\r\n    const cachedData = localStorage.getItem('cachedFlightData');\r\n    if (cachedData) {\r\n      const { data, timestamp, flightNum } = JSON.parse(cachedData);\r\n      // Check if the data is less than 24 hours old\r\n      if (Date.now() - timestamp < 24 * 60 * 60 * 1000) {\r\n        setFlightNumber(flightNum);\r\n        return data;\r\n      } else {\r\n        localStorage.removeItem('cachedFlightData');\r\n      }\r\n    }\r\n    return null;\r\n  });\r\n  const [lastKnownPosition, setLastKnownPosition] = useState<InterpolatedPosition | null>(() => {\r\n    const cachedPosition = localStorage.getItem('cachedPosition');\r\n    return cachedPosition ? JSON.parse(cachedPosition) : null;\r\n  });\r\n  const [trackingInterval, setTrackingInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [interpolationInterval, setInterpolationInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [distanceUpdateInterval, setDistanceUpdateInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [distanceInterpolationInterval, setDistanceInterpolationInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [lastDrawTime, setLastDrawTime] = useState<Date | null>(() => {\r\n    const cachedTime = localStorage.getItem('cachedLastDrawTime');\r\n    return cachedTime ? new Date(JSON.parse(cachedTime)) : null;\r\n  });\r\n  const [cacheTimestamp, setCacheTimestamp] = useState<number | null>(() => {\r\n    const cachedData = localStorage.getItem('cachedFlightData');\r\n    if (cachedData) {\r\n      const { timestamp } = JSON.parse(cachedData);\r\n      return timestamp;\r\n    }\r\n    return null;\r\n  });\r\n  const [lastApiCall, setLastApiCall] = useState<number | null>(null);\r\n  const [cachedFlightData, setCachedFlightData] = useState<CachedFlightData | null>(null);\r\n\r\n  // Save location to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (location) {\r\n      localStorage.setItem('lastLocation', JSON.stringify(location));\r\n    } else {\r\n      localStorage.removeItem('lastLocation');\r\n    }\r\n  }, [location]);\r\n\r\n  // Save flight data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (flightData && flightNumber) {\r\n      const timestamp = Date.now();\r\n      setCacheTimestamp(timestamp);\r\n      localStorage.setItem('cachedFlightData', JSON.stringify({\r\n        data: flightData,\r\n        timestamp,\r\n        flightNum: flightNumber\r\n      }));\r\n    } else {\r\n      setCacheTimestamp(null);\r\n      localStorage.removeItem('cachedFlightData');\r\n    }\r\n  }, [flightData, flightNumber]);\r\n\r\n  // Save lastKnownPosition to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (lastKnownPosition) {\r\n      localStorage.setItem('cachedPosition', JSON.stringify(lastKnownPosition));\r\n    } else {\r\n      localStorage.removeItem('cachedPosition');\r\n    }\r\n  }, [lastKnownPosition]);\r\n\r\n  // Save lastDrawTime to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (lastDrawTime) {\r\n      localStorage.setItem('cachedLastDrawTime', JSON.stringify(lastDrawTime.toISOString()));\r\n    } else {\r\n      localStorage.removeItem('cachedLastDrawTime');\r\n    }\r\n  }, [lastDrawTime]);\r\n\r\n  // Cleanup tracking interval on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (trackingInterval) {\r\n        clearInterval(trackingInterval);\r\n      }\r\n      if (interpolationInterval) {\r\n        clearInterval(interpolationInterval);\r\n      }\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n      }\r\n    };\r\n  }, [trackingInterval, interpolationInterval, distanceUpdateInterval, distanceInterpolationInterval]);\r\n\r\n  // Update distance when location or aircraft position changes\r\n  useEffect(() => {\r\n    if (location && aircraftPosition) {\r\n      const newDistance = calculateDistance(\r\n        location.lat,\r\n        location.lng,\r\n        aircraftPosition.lat,\r\n        aircraftPosition.lng\r\n      );\r\n      setDistance(newDistance);\r\n      setDisplayedDistance(newDistance); // Set initial value immediately\r\n\r\n      // Clear existing intervals\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n      }\r\n\r\n      // Set up new interval for distance updates\r\n      const interval = setInterval(() => {\r\n        if (location && aircraftPosition) {\r\n          const currentDistance = calculateDistance(\r\n            location.lat,\r\n            location.lng,\r\n            aircraftPosition.lat,\r\n            aircraftPosition.lng\r\n          );\r\n          setDistance(currentDistance);\r\n        }\r\n      }, 25); // Update every 100ms for smooth display\r\n\r\n      setDistanceUpdateInterval(interval);\r\n\r\n      // Set up separate interval for position interpolation for distance calculation\r\n      if (flightData?.live && lastKnownPosition) {\r\n        const distanceInterpolation = setInterval(() => {\r\n          if (flightData.live && lastKnownPosition && !flightData.live.is_ground && flightData.live.speed_horizontal >= 50) {\r\n            const newPos = calculateInterpolatedPosition(\r\n              lastKnownPosition,\r\n              flightData.live.speed_horizontal,\r\n              flightData.live.direction\r\n            );\r\n            setAircraftPosition({\r\n              lat: newPos.lat,\r\n              lng: newPos.lng,\r\n              name: `${flightData.airline.name} ${flightData.flight.number}`\r\n            });\r\n          }\r\n        }, 100); // Update every 100ms for smooth distance calculation\r\n\r\n        setDistanceInterpolationInterval(distanceInterpolation);\r\n      }\r\n    } else {\r\n      setDistance(null);\r\n      setDisplayedDistance(null);\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n        setDistanceUpdateInterval(null);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n        setDistanceInterpolationInterval(null);\r\n      }\r\n    }\r\n  }, [location, aircraftPosition, flightData, lastKnownPosition, calculateInterpolatedPosition]);\r\n\r\n  // Animate distance display\r\n  useEffect(() => {\r\n    if (distance === null || displayedDistance === null) {\r\n      setDisplayedDistance(distance);\r\n      return;\r\n    }\r\n\r\n    const diff = distance - displayedDistance;\r\n    if (Math.abs(diff) < 1) {\r\n      setDisplayedDistance(distance);\r\n      return;\r\n    }\r\n\r\n    const step = Math.sign(diff) * Math.min(Math.abs(diff), Math.max(1, Math.abs(diff) / 5));\r\n    const timer = setTimeout(() => {\r\n      setDisplayedDistance(prev => prev !== null ? prev + step : null);\r\n    }, 16); // ~60fps\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [distance, displayedDistance]);\r\n\r\n  // Get current location\r\n  const getCurrentLocation = () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by your browser');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const newLocation = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n          name: 'Current Location'\r\n        };\r\n        setLocation(newLocation);\r\n        setAircraftPosition(null); // Clear aircraft position when getting current location\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        setError('Error getting location: ' + error.message);\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Search for location\r\n  const searchLocation = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`\r\n      );\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch location');\r\n      \r\n      const data = await response.json();\r\n      if (data.length === 0) {\r\n        setError('Location not found');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const newLocation = {\r\n        lat: parseFloat(data[0].lat),\r\n        lng: parseFloat(data[0].lon),\r\n        name: data[0].display_name\r\n      };\r\n      setLocation(newLocation);\r\n      setAircraftPosition(null); // Clear aircraft position when searching for location\r\n    } catch (err) {\r\n      setError('Error searching location: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update interpolated position for map display\r\n  const updateInterpolatedPosition = useCallback(() => {\r\n    if (flightData?.live && lastKnownPosition) {\r\n      // Don't interpolate if on ground or if speed is too low\r\n      if (flightData.live.is_ground || flightData.live.speed_horizontal < 50) {\r\n        console.log('Not interpolating - aircraft on ground or speed too low');\r\n        setLastDrawTime(new Date()); // Still update the timestamp to show it's trying\r\n        return;\r\n      }\r\n\r\n      console.log('Calculating new position...');\r\n      const newPos = calculateInterpolatedPosition(\r\n        lastKnownPosition,\r\n        flightData.live.speed_horizontal,\r\n        flightData.live.direction\r\n      );\r\n      \r\n      console.log(`New position: ${newPos.lat}, ${newPos.lng}`);\r\n      setLastKnownPosition(newPos);\r\n      setAircraftPosition({\r\n        lat: newPos.lat,\r\n        lng: newPos.lng,\r\n        name: `${flightData.airline.name} ${flightData.flight.number}`\r\n      });\r\n      setLastDrawTime(new Date());\r\n    } else {\r\n      console.log('Cannot interpolate - missing flight data or last position');\r\n    }\r\n  }, [flightData, lastKnownPosition, setLastKnownPosition, setAircraftPosition, setLastDrawTime]);\r\n\r\n  // Initialize map interpolation if cached data is loaded\r\n  useEffect(() => {\r\n    if (flightData && lastKnownPosition && !interpolationInterval) {\r\n      console.log('Initializing interpolation from cached data');\r\n      // Use immediate call for testing and then set interval\r\n      updateInterpolatedPosition(); // Initial call\r\n      const interpolation = setInterval(() => {\r\n        console.log('Interpolation interval triggered');\r\n        updateInterpolatedPosition();\r\n      }, 5000); // Update position every 5 seconds\r\n      \r\n      setInterpolationInterval(interpolation);\r\n    }\r\n\r\n    // Clean up interval when component unmounts\r\n    return () => {\r\n      if (interpolationInterval) {\r\n        clearInterval(interpolationInterval);\r\n      }\r\n    };\r\n  }, [flightData, lastKnownPosition, interpolationInterval, updateInterpolatedPosition]);\r\n\r\n  // Track flight\r\n  const trackFlight = async (forceRefresh: boolean = false) => {\r\n    if (!flightNumber.trim()) {\r\n      setError('Please enter a flight number');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Check if we have cached data and it's not a force refresh\r\n      if (!forceRefresh && cachedFlightData) {\r\n        const now = Date.now();\r\n        const cacheAge = now - cachedFlightData.timestamp;\r\n        \r\n        // If cache flight number matches, use it\r\n        if (cachedFlightData.data.flight.iata === flightNumber) {\r\n          setFlightData(cachedFlightData.data);\r\n          setLastKnownPosition({\r\n            lat: cachedFlightData.data.live.latitude,\r\n            lng: cachedFlightData.data.live.longitude,\r\n            name: `${cachedFlightData.data.airline.name} ${cachedFlightData.data.flight.number}`\r\n          });\r\n          setAircraftPosition({\r\n            lat: cachedFlightData.data.live.latitude,\r\n            lng: cachedFlightData.data.live.longitude,\r\n            name: `${cachedFlightData.data.airline.name} ${cachedFlightData.data.flight.number}`\r\n          });\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const response = await fetch(\r\n        `https://api.aviationstack.com/v1/flights?access_key=0568428049f1cef2ccb5aef37792e31f&flight_iata=${flightNumber}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch flight data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (!data.data || data.data.length === 0) {\r\n        throw new Error('No flight data found');\r\n      }\r\n\r\n      const flight = data.data[0];\r\n      if (!flight.live) {\r\n        throw new Error('No live data available for this flight');\r\n      }\r\n\r\n      // Cache the new data\r\n      const newCache: CachedFlightData = {\r\n        data: flight,\r\n        timestamp: Date.now()\r\n      };\r\n      setCachedFlightData(newCache);\r\n      setLastApiCall(newCache.timestamp);\r\n      sessionStorage.setItem('lastApiCall', newCache.timestamp.toString());\r\n\r\n      setFlightData(flight);\r\n      setLastKnownPosition({\r\n        lat: flight.live.latitude,\r\n        lng: flight.live.longitude,\r\n        name: `${flight.airline.name} ${flight.flight.number}`\r\n      });\r\n      setAircraftPosition({\r\n        lat: flight.live.latitude,\r\n        lng: flight.live.longitude,\r\n        name: `${flight.airline.name} ${flight.flight.number}`\r\n      });\r\n    } catch (err) {\r\n      setError('Error tracking flight: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Clear stored location\r\n  const clearLocation = () => {\r\n    setLocation(null);\r\n    setAircraftPosition(null);\r\n    setSearchQuery('');\r\n    setError('');\r\n    setFlightNumber('');\r\n    setFlightData(null);\r\n    setLastKnownPosition(null);\r\n    if (trackingInterval) {\r\n      clearInterval(trackingInterval);\r\n      setTrackingInterval(null);\r\n    }\r\n    if (interpolationInterval) {\r\n      clearInterval(interpolationInterval);\r\n      setInterpolationInterval(null);\r\n    }\r\n    if (distanceUpdateInterval) {\r\n      clearInterval(distanceUpdateInterval);\r\n      setDistanceUpdateInterval(null);\r\n    }\r\n    if (distanceInterpolationInterval) {\r\n      clearInterval(distanceInterpolationInterval);\r\n      setDistanceInterpolationInterval(null);\r\n    }\r\n  };\r\n\r\n  // Force refresh flight data from API\r\n  const handleRefreshClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    trackFlight(true);\r\n  };\r\n\r\n  const interpolatePosition = (startPos: InterpolatedPosition, endPos: InterpolatedPosition, progress: number): InterpolatedPosition => {\r\n    const startTime = startPos.timestamp || 0;\r\n    const endTime = endPos.timestamp || 1;\r\n    const currentTime = startTime + (endTime - startTime) * progress;\r\n    \r\n    return {\r\n      lat: startPos.lat + (endPos.lat - startPos.lat) * progress,\r\n      lng: startPos.lng + (endPos.lng - startPos.lng) * progress,\r\n      name: `${startPos.name} → ${endPos.name}`,\r\n      timestamp: currentTime\r\n    };\r\n  };\r\n\r\n  const updateAircraftPosition = (progress: number) => {\r\n    if (lastKnownPosition && aircraftPosition) {\r\n      const interpolated = interpolatePosition(\r\n        {\r\n          ...lastKnownPosition,\r\n          name: lastKnownPosition.name || 'Unknown Location'\r\n        },\r\n        {\r\n          ...aircraftPosition,\r\n          name: aircraftPosition.name || 'Unknown Location'\r\n        },\r\n        progress\r\n      );\r\n      setAircraftPosition(interpolated);\r\n    }\r\n  };\r\n\r\n  const handleLocationUpdate = (location: Location) => {\r\n    const position: InterpolatedPosition = {\r\n      lat: location.lat,\r\n      lng: location.lng,\r\n      name: location.name || 'Unknown Location',\r\n      timestamp: Date.now()\r\n    };\r\n    setLastKnownPosition(position);\r\n    setAircraftPosition(position);\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gray-100'} p-4`}>\r\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow p-6 max-w-7xl mx-auto`}>\r\n        <div className=\"mb-4 space-y-4\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <div className=\"flex-1 min-w-[200px] flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && searchLocation()}\r\n                hidden={location !== null}\r\n                placeholder=\"Enter location (e.g., London, UK)\"\r\n                className={`flex-1 p-2 border rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  isDarkMode ? 'bg-gray-700 text-white border-gray-600' : 'bg-white text-gray-900'\r\n                }`}\r\n              />\r\n              <button\r\n                onClick={searchLocation}\r\n                disabled={loading || !searchQuery.trim()}\r\n                hidden={location !== null}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-blue-300 whitespace-nowrap\"\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n            <div className=\"flex-1 min-w-[200px] flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={flightNumber}\r\n                onChange={(e) => setFlightNumber(e.target.value.toUpperCase())}\r\n                onKeyPress={(e) => e.key === 'Enter' && trackFlight()}\r\n                placeholder=\"Enter flight number (e.g., BA123)\"\r\n                className={`flex-1 p-2 border rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  isDarkMode ? 'bg-gray-700 text-white border-gray-600' : 'bg-white text-gray-900'\r\n                }`}\r\n              />\r\n              <button\r\n                onClick={(e) => trackFlight()}\r\n                disabled={loading || !flightNumber.trim()}\r\n                className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 disabled:bg-purple-300 whitespace-nowrap\"\r\n              >\r\n                Track Flight\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              {location && (\r\n                <button\r\n                  onClick={clearLocation}\r\n                  disabled={loading}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:bg-red-300 whitespace-nowrap\"\r\n                >\r\n                  Clear Location\r\n                </button>\r\n              )}\r\n              {flightData && (\r\n                <button\r\n                  onClick={handleRefreshClick}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 whitespace-nowrap\"\r\n                >\r\n                  Refresh\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className={`p-3 rounded ${\r\n              isDarkMode ? 'bg-red-900 text-red-100' : 'bg-red-100 text-red-700'\r\n            }`}>\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          {flightData && (\r\n            <div className={`p-4 rounded ${\r\n              isDarkMode ? 'bg-blue-900 text-blue-100' : 'bg-blue-100 text-blue-700'\r\n            }`}>\r\n              <div className=\"flex justify-between items-center mb-3\">\r\n                <div className=\"font-medium text-lg\">\r\n                  {flightData.airline.name} {flightData.flight.number}\r\n                </div>\r\n              </div>\r\n              {displayedDistance !== null && (\r\n                <div className=\"text-center\">\r\n                  <div className={`text-sm font-medium mb-1 ${\r\n                    isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                  }`}>\r\n                    Distance to Aircraft\r\n                  </div>\r\n                  <div className=\"font-mono text-2xl font-bold\">\r\n                    {Math.round(displayedDistance).toLocaleString()}m\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"space-y-3\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <div className={`text-sm font-medium text-center ${\r\n                      isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                    }`}>\r\n                      From\r\n                    </div>\r\n                    <div className=\"text-base text-center\">{flightData.departure.airport}</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className={`text-sm font-medium text-center ${\r\n                      isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                    }`}>\r\n                      To\r\n                    </div>\r\n                    <div className=\"text-base text-center\">{flightData.arrival.airport}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                {flightData.live && (\r\n                  <div className=\"grid grid-cols-2 gap-4 mt-2\">\r\n                    <div>\r\n                      <div className={`text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Altitude\r\n                      </div>\r\n                      <div className=\"text-base text-center\">{metersToFeet(flightData.live.altitude)}ft</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Speed\r\n                      </div>\r\n                      <div className=\"text-base text-center\">{kmhToKnots(flightData.live.speed_horizontal)}kts</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Direction\r\n                      </div>\r\n                      <div className=\"text-base text-center\">{flightData.live.direction}°</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Status\r\n                      </div>\r\n                      <div className=\"text-base text-center\">{flightData.live.is_ground ? 'On Ground' : 'In Air'}</div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {cacheTimestamp && (\r\n                  <div className={`text-xs mt-2 text-center ${\r\n                    isDarkMode ? 'text-blue-300' : 'text-blue-600'\r\n                  }`}>\r\n                    Using API data from {sessionStorage.getItem('lastApiCall') ? new Date(parseInt(sessionStorage.getItem('lastApiCall')!)).toLocaleString() : \"N/A\"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={`h-[600px] rounded border ${\r\n          isDarkMode ? 'bg-gray-700 border-gray-600' : 'bg-gray-50 border-gray-200'\r\n        }`}>\r\n          <MapContainer\r\n            style={{ height: '100%', width: '100%' }}\r\n            center={location ? [location.lat, location.lng] : [51.505, -0.09]}\r\n            zoom={location ? 13 : 2}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              url={isDarkMode \r\n                ? \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n                : \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              }\r\n            />\r\n            {location && (\r\n              <Marker \r\n                position={[location.lat, location.lng]} \r\n              />\r\n            )}\r\n            {aircraftPosition && (\r\n              <>\r\n                <Marker \r\n                  key={`${aircraftPosition.lat.toFixed(6)}-${aircraftPosition.lng.toFixed(6)}-${flightData?.live?.direction || 0}-${lastDrawTime?.getTime() || 0}`}\r\n                  position={[aircraftPosition.lat, aircraftPosition.lng]} \r\n                  icon={L.divIcon({\r\n                    html: `<div style=\"transform: rotate(${flightData?.live?.direction || 0}deg)\">\r\n                      <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 24px; height: 24px;\" />\r\n                    </div>`,\r\n                    className: '',\r\n                    iconSize: [24, 24],\r\n                    iconAnchor: [12, 12]\r\n                  })}\r\n                />\r\n                <MapUpdater center={[aircraftPosition.lat, aircraftPosition.lng]} />\r\n              </>\r\n            )}\r\n          </MapContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightTracker; ","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletContext } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance, context } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        const { children } = props;\n        return children == null ? null : /*#__PURE__*/ React.createElement(LeafletContext, {\n            value: context\n        }, children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        // biome-ignore lint/correctness/useExhaustiveDependencies: update overlay when children change\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n    const eventHandlersRef = useRef(undefined);\n    useEffect(function addEventHandlers() {\n        if (eventHandlers != null) {\n            element.instance.on(eventHandlers);\n        }\n        eventHandlersRef.current = eventHandlers;\n        return function removeEventHandlers() {\n            if (eventHandlersRef.current != null) {\n                element.instance.off(eventHandlersRef.current);\n            }\n            eventHandlersRef.current = null;\n        };\n    }, [\n        element,\n        eventHandlers\n    ]);\n}\n","import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n    const attributionRef = useRef(attribution);\n    useEffect(function updateAttribution() {\n        if (attribution !== attributionRef.current && map.attributionControl != null) {\n            if (attributionRef.current != null) {\n                map.attributionControl.removeAttribution(attributionRef.current);\n            }\n            if (attribution != null) {\n                map.attributionControl.addAttribution(attribution);\n            }\n        }\n        attributionRef.current = attribution;\n    }, [\n        map,\n        attribution\n    ]);\n}\n","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { useLayerLifecycle } from './layer.js';\nimport { withPane } from './pane.js';\nexport function usePathOptions(element, props) {\n    const optionsRef = useRef(undefined);\n    useEffect(function updatePathOptions() {\n        if (props.pathOptions !== optionsRef.current) {\n            const options = props.pathOptions ?? {};\n            element.instance.setStyle(options);\n            optionsRef.current = options;\n        }\n    }, [\n        element,\n        props\n    ]);\n}\nexport function createPathHook(useElement) {\n    return function usePath(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        usePathOptions(elementRef.current, props);\n        return elementRef;\n    };\n}\n","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component.js';\nimport { createControlHook } from './control.js';\nimport { createDivOverlayHook } from './div-overlay.js';\nimport { createElementHook, createElementObject } from './element.js';\nimport { createLayerHook } from './layer.js';\nimport { createPathHook } from './path.js';\nexport function createControlComponent(createInstance) {\n    function createElement(props, context) {\n        return createElementObject(createInstance(props), context);\n    }\n    const useElement = createElementHook(createElement);\n    const useControl = createControlHook(useElement);\n    return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n    const useElement = createElementHook(createElement);\n    const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n    return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const usePath = createPathHook(useElement);\n    return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createLeafComponent(useLayer);\n}\n","import { LeafletContext, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nfunction MapContainerComponent({ bounds, boundsOptions, center, children, className, id, placeholder, style, whenReady, zoom, ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    const mapInstanceRef = useRef(undefined);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: ref callback\n    const mapRef = useCallback((node)=>{\n        if (node !== null && !mapInstanceRef.current) {\n            const map = new LeafletMap(node, options);\n            mapInstanceRef.current = map;\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletContext, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        ...props,\n        ref: mapRef\n    }, contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n","import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef(undefined);\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef(undefined);\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            updateElement\n        ]);\n        return elementRef;\n    };\n}\n","import { createContext, use } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport function useLeafletContext() {\n    const context = use(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPlaneIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"#ffff00\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22,16v-2l-8.5-5V3.5C13.5,2.67,12.83,2,12,2s-1.5,0.67-1.5,1.5V9L2,14v2l8.5-2.5V19L8,20.5V22l4-1l4,1v-1.5L13.5,19 v-5.5L22,16z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlaneIcon);\nexport default __webpack_public_path__ + \"static/media/plane-icon.5312c99550d9e701054eea554971757c.svg\";\nexport { ForwardRef as ReactComponent };","export function withPane(props, context) {\n    const pane = props.pane ?? context.pane;\n    return pane ? {\n        ...props,\n        pane\n    } : props;\n}\n"],"names":["TileLayer","createTileLayerComponent","_ref","context","url","options","layer","LeafletTileLayer","withPane","createElementObject","props","prevProps","opacity","zIndex","setOpacity","setZIndex","updateGridLayer","setUrl","Marker","createLayerComponent","ctx","position","marker","LeafletMarker","extendContext","overlayContainer","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","calculateInterpolatedPosition","startPos","speed","heading","_startPos$timestamp","now","Date","distance","timestamp","headingRad","Math","PI","lat1","lat","lon1","lng","d","lat2","asin","sin","cos","lon2","atan2","name","calculateDistance","φ1","φ2","Δφ","Δλ","a","c","sqrt","round","MapUpdater","center","map","useMap","useEffect","setView","getZoom","FlightTracker","_flightData$live","_flightData$live2","isDarkMode","useTheme","location","setLocation","useState","savedLocation","localStorage","getItem","JSON","parse","aircraftPosition","setAircraftPosition","setDistance","displayedDistance","setDisplayedDistance","error","setError","searchQuery","setSearchQuery","loading","setLoading","flightNumber","setFlightNumber","flightData","setFlightData","cachedData","data","flightNum","removeItem","lastKnownPosition","setLastKnownPosition","cachedPosition","trackingInterval","setTrackingInterval","interpolationInterval","setInterpolationInterval","distanceUpdateInterval","setDistanceUpdateInterval","distanceInterpolationInterval","setDistanceInterpolationInterval","lastDrawTime","setLastDrawTime","cachedTime","cacheTimestamp","setCacheTimestamp","lastApiCall","setLastApiCall","cachedFlightData","setCachedFlightData","setItem","stringify","toISOString","clearInterval","newDistance","interval","setInterval","currentDistance","live","distanceInterpolation","is_ground","speed_horizontal","newPos","direction","airline","flight","number","diff","abs","step","sign","min","max","timer","setTimeout","prev","clearTimeout","searchLocation","async","trim","response","fetch","encodeURIComponent","ok","Error","json","length","newLocation","parseFloat","lon","display_name","err","message","updateInterpolatedPosition","useCallback","console","log","interpolation","trackFlight","forceRefresh","arguments","undefined","iata","latitude","longitude","newCache","sessionStorage","toString","_jsx","className","children","_jsxs","type","value","onChange","e","target","onKeyPress","key","hidden","placeholder","onClick","disabled","toUpperCase","clearLocation","event","preventDefault","toLocaleString","departure","airport","arrival","meters","altitude","kmh","parseInt","MapContainer","style","height","width","zoom","scrollWheelZoom","attribution","_Fragment","html","planeIcon","iconSize","iconAnchor","toFixed","getTime","createContainerComponent","useElement","ContainerComponent","forwardedRef","instance","current","useImperativeHandle","React","LeafletContext","forwardRef","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","on","off","useLayerLifecycle","layerContainer","addLayer","removeLayer","createLayerHook","useLeafletContext","elementRef","attributionRef","attributionControl","removeAttribution","addAttribution","useAttribution","createPathHook","optionsRef","pathOptions","setStyle","usePathOptions","createElement","updateElement","createElementHook","createPathComponent","LeafComponent","createLeafComponent","MapContainerComponent","bounds","boundsOptions","id","whenReady","setContext","mapInstanceRef","mapRef","node","LeafletMap","fitBounds","createLeafletContext","remove","contents","ref","useMapEvents","handlers","container","Object","freeze","propsRef","CONTEXT_VERSION","__version","source","extra","createContext","use","pane"],"sourceRoot":""}