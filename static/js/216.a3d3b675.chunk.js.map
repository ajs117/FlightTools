{"version":3,"file":"static/js/216.a3d3b675.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/TileLayer.js","../node_modules/@react-leaflet/core/lib/grid-layer.js","../node_modules/react-leaflet/lib/Marker.js","components/FlightTracker.tsx","../node_modules/@react-leaflet/core/lib/component.js","../node_modules/@react-leaflet/core/lib/events.js","../node_modules/@react-leaflet/core/lib/layer.js","../node_modules/@react-leaflet/core/lib/attribution.js","../node_modules/@react-leaflet/core/lib/path.js","../node_modules/@react-leaflet/core/lib/generic.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/hooks.js","../node_modules/@react-leaflet/core/lib/element.js","../node_modules/@react-leaflet/core/lib/context.js","plane-icon.svg","../node_modules/@react-leaflet/core/lib/pane.js"],"sourcesContent":["import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url, ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n","export function updateGridLayer(layer, props, prevProps) {\n    const { opacity, zIndex } = props;\n    if (opacity != null && opacity !== prevProps.opacity) {\n        layer.setOpacity(opacity);\n    }\n    if (zIndex != null && zIndex !== prevProps.zIndex) {\n        layer.setZIndex(zIndex);\n    }\n}\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position, ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport planeIcon from '../plane-icon.svg';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\n// Fix for default markers\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\ninterface Location {\r\n  lat: number;\r\n  lng: number;\r\n  name?: string;\r\n}\r\n\r\ninterface FlightData {\r\n  flight: {\r\n    number: string;\r\n    iata: string;\r\n  };\r\n  departure: {\r\n    airport: string;\r\n    timezone: string;\r\n  };\r\n  arrival: {\r\n    airport: string;\r\n    timezone: string;\r\n  };\r\n  airline: {\r\n    name: string;\r\n  };\r\n  live: {\r\n    latitude: number;\r\n    longitude: number;\r\n    altitude: number;\r\n    direction: number;\r\n    speed_horizontal: number;\r\n    speed_vertical: number;\r\n    is_ground: boolean;\r\n    updated: string;\r\n  };\r\n}\r\n\r\ninterface AllAircraftData {\r\n  icao24: string;\r\n  callsign?: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  altitude: number;\r\n  direction: number;\r\n  speed: number;\r\n  isOnGround: boolean;\r\n}\r\n\r\ninterface InterpolatedPosition {\r\n  lat: number;\r\n  lng: number;\r\n  name: string;\r\n  timestamp?: number;\r\n}\r\n\r\ninterface CachedFlightData {\r\n  data: any;\r\n  timestamp: number;\r\n}\r\n\r\n// Conversion functions\r\nconst metersToFeet = (meters: number): number => {\r\n  return Math.round(meters * 3.28084);\r\n};\r\n\r\nconst kmhToKnots = (kmh: number): number => {\r\n  return Math.round(kmh * 0.539957);\r\n};\r\n\r\n// Calculate interpolated position based on speed and heading\r\nconst calculateInterpolatedPosition = (startPos: InterpolatedPosition, speed: number, heading: number): InterpolatedPosition => {\r\n  const now = Date.now();\r\n  const timeDiff = (now - (startPos.timestamp ?? now)) / 1000; // Convert to seconds\r\n  const distance = (speed * timeDiff) / 3600; // Convert km/h to km\r\n\r\n  // Convert heading to radians\r\n  const headingRad = (heading * Math.PI) / 180;\r\n  \r\n  // Calculate new position using great circle formula\r\n  const lat1 = startPos.lat * Math.PI / 180;\r\n  const lon1 = startPos.lng * Math.PI / 180;\r\n  const d = distance / 6371; // Earth's radius in km\r\n\r\n  const lat2 = Math.asin(\r\n    Math.sin(lat1) * Math.cos(d) +\r\n    Math.cos(lat1) * Math.sin(d) * Math.cos(headingRad)\r\n  );\r\n\r\n  const lon2 = lon1 + Math.atan2(\r\n    Math.sin(headingRad) * Math.sin(d) * Math.cos(lat1),\r\n    Math.cos(d) - Math.sin(lat1) * Math.sin(lat2)\r\n  );\r\n\r\n  return {\r\n    lat: lat2 * 180 / Math.PI,\r\n    lng: lon2 * 180 / Math.PI,\r\n    timestamp: now,\r\n    name: startPos.name // Add the required 'name' property from the input position\r\n  };\r\n};\r\n\r\n// Calculate distance between two points using Haversine formula\r\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\r\n  const R = 6371e3; // Earth's radius in meters\r\n  const φ1 = lat1 * Math.PI / 180;\r\n  const φ2 = lat2 * Math.PI / 180;\r\n  const Δφ = (lat2 - lat1) * Math.PI / 180;\r\n  const Δλ = (lon2 - lon1) * Math.PI / 180;\r\n\r\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) *\r\n    Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return Math.round(R * c); // Distance in meters\r\n};\r\n\r\n// Component to handle map updates\r\nconst MapUpdater = ({ center }: { center: [number, number] }) => {\r\n  const map = useMap();\r\n  \r\n  useEffect(() => {\r\n    map.setView(center, map.getZoom());\r\n  }, [center, map]);\r\n  \r\n  return null;\r\n};\r\n\r\nconst FlightTracker: React.FC = () => {\r\n  const { isDarkMode } = useTheme();\r\n  const [location, setLocation] = useState<Location | null>(null);\r\n  const [aircraftPosition, setAircraftPosition] = useState<Location | null>(null);\r\n  const [allAircraft, setAllAircraft] = useState<AllAircraftData[]>([]);\r\n  const [trackingAllAircraft, setTrackingAllAircraft] = useState(false);\r\n  const [distance, setDistance] = useState<number | null>(null);\r\n  const [displayedDistance, setDisplayedDistance] = useState<number | null>(null);\r\n  const [error, setError] = useState<string>('');\r\n  const [searchQuery, setSearchQuery] = useState(() => {\r\n    const saved = localStorage.getItem('lastSearchQuery');\r\n    return saved || '';\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [flightNumber, setFlightNumber] = useState(() => {\r\n    const saved = localStorage.getItem('lastFlightNumber');\r\n    return saved || '';\r\n  });\r\n  const [flightData, setFlightData] = useState<FlightData | null>(null);\r\n  const [lastKnownPosition, setLastKnownPosition] = useState<InterpolatedPosition | null>(null);\r\n  const [trackingInterval, setTrackingInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [autoRefreshInterval, setAutoRefreshInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [interpolationInterval, setInterpolationInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [distanceUpdateInterval, setDistanceUpdateInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [distanceInterpolationInterval, setDistanceInterpolationInterval] = useState<NodeJS.Timeout | null>(null);\r\n  const [lastDrawTime, setLastDrawTime] = useState<Date | null>(null);\r\n  const [lastApiCall, setLastApiCall] = useState<number | null>(null);\r\n\r\n  // Auto-track flight and use saved location on mount\r\n  useEffect(() => {\r\n    // Load saved location if it exists\r\n    const savedLocation = localStorage.getItem('lastLocation');\r\n    if (savedLocation) {\r\n      try {\r\n        const parsedLocation = JSON.parse(savedLocation);\r\n        setLocation(parsedLocation);\r\n      } catch (e) {\r\n        console.error('Error parsing saved location:', e);\r\n      }\r\n    }\r\n\r\n    // Auto-track flight if flight number exists\r\n    const savedFlightNumber = localStorage.getItem('lastFlightNumber');\r\n    if (savedFlightNumber) {\r\n      setFlightNumber(savedFlightNumber);\r\n      trackFlight();\r\n    }\r\n  }, []); // Empty dependency array means this runs once on mount\r\n\r\n  // Save search query to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      localStorage.setItem('lastSearchQuery', searchQuery);\r\n    } else {\r\n      localStorage.removeItem('lastSearchQuery');\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  // Save flight number to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (flightNumber) {\r\n      localStorage.setItem('lastFlightNumber', flightNumber);\r\n    } else {\r\n      localStorage.removeItem('lastFlightNumber');\r\n    }\r\n  }, [flightNumber]);\r\n\r\n  // Save location to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (location) {\r\n      localStorage.setItem('lastLocation', JSON.stringify(location));\r\n    } else {\r\n      localStorage.removeItem('lastLocation');\r\n    }\r\n  }, [location]);\r\n\r\n  // Cleanup tracking interval on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (trackingInterval) {\r\n        clearInterval(trackingInterval);\r\n      }\r\n      if (autoRefreshInterval) {\r\n        clearInterval(autoRefreshInterval);\r\n      }\r\n      if (interpolationInterval) {\r\n        clearInterval(interpolationInterval);\r\n      }\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n      }\r\n    };\r\n  }, [trackingInterval, autoRefreshInterval, interpolationInterval, distanceUpdateInterval, distanceInterpolationInterval]);\r\n\r\n  // Update distance when location or aircraft position changes\r\n  useEffect(() => {\r\n    if (location && aircraftPosition) {\r\n      const newDistance = calculateDistance(\r\n        location.lat,\r\n        location.lng,\r\n        aircraftPosition.lat,\r\n        aircraftPosition.lng\r\n      );\r\n      setDistance(newDistance);\r\n      setDisplayedDistance(newDistance); // Set initial value immediately\r\n\r\n      // Clear existing intervals\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n      }\r\n\r\n      // Set up new interval for distance updates\r\n      const interval = setInterval(() => {\r\n        if (location && aircraftPosition) {\r\n          const currentDistance = calculateDistance(\r\n            location.lat,\r\n            location.lng,\r\n            aircraftPosition.lat,\r\n            aircraftPosition.lng\r\n          );\r\n          setDistance(currentDistance);\r\n        }\r\n      }, 25); // Update every 100ms for smooth display\r\n\r\n      setDistanceUpdateInterval(interval);\r\n\r\n      // Set up separate interval for position interpolation for distance calculation\r\n      if (flightData?.live && lastKnownPosition) {\r\n        const distanceInterpolation = setInterval(() => {\r\n          if (flightData.live && lastKnownPosition && !flightData.live.is_ground && flightData.live.speed_horizontal >= 50) {\r\n            const newPos = calculateInterpolatedPosition(\r\n              lastKnownPosition,\r\n              flightData.live.speed_horizontal,\r\n              flightData.live.direction\r\n            );\r\n            setAircraftPosition({\r\n              lat: newPos.lat,\r\n              lng: newPos.lng,\r\n              name: `${flightData.airline.name} ${flightData.flight.number}`\r\n            });\r\n          }\r\n        }, 100); // Update every 100ms for smooth distance calculation\r\n\r\n        setDistanceInterpolationInterval(distanceInterpolation);\r\n      }\r\n    } else {\r\n      setDistance(null);\r\n      setDisplayedDistance(null);\r\n      if (distanceUpdateInterval) {\r\n        clearInterval(distanceUpdateInterval);\r\n        setDistanceUpdateInterval(null);\r\n      }\r\n      if (distanceInterpolationInterval) {\r\n        clearInterval(distanceInterpolationInterval);\r\n        setDistanceInterpolationInterval(null);\r\n      }\r\n    }\r\n  }, [location, aircraftPosition, flightData, lastKnownPosition, calculateInterpolatedPosition]);\r\n\r\n  // Animate distance display\r\n  useEffect(() => {\r\n    if (distance === null || displayedDistance === null) {\r\n      setDisplayedDistance(distance);\r\n      return;\r\n    }\r\n\r\n    const diff = distance - displayedDistance;\r\n    if (Math.abs(diff) < 1) {\r\n      setDisplayedDistance(distance);\r\n      return;\r\n    }\r\n\r\n    const step = Math.sign(diff) * Math.min(Math.abs(diff), Math.max(1, Math.abs(diff) / 5));\r\n    const timer = setTimeout(() => {\r\n      setDisplayedDistance(prev => prev !== null ? prev + step : null);\r\n    }, 16); // ~60fps\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [distance, displayedDistance]);\r\n\r\n  // Get current location\r\n  const getCurrentLocation = () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by your browser');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const newLocation = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n          name: 'Current Location'\r\n        };\r\n        setLocation(newLocation);\r\n        setAircraftPosition(null); // Clear aircraft position when getting current location\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        setError('Error getting location: ' + error.message);\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  // Search for location\r\n  const searchLocation = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`\r\n      );\r\n      \r\n      if (!response.ok) throw new Error('Failed to fetch location');\r\n      \r\n      const data = await response.json();\r\n      if (data.length === 0) {\r\n        setError('Location not found');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const newLocation = {\r\n        lat: parseFloat(data[0].lat),\r\n        lng: parseFloat(data[0].lon),\r\n        name: data[0].display_name\r\n      };\r\n      setLocation(newLocation);\r\n      setAircraftPosition(null); // Clear aircraft position when searching for location\r\n    } catch (err) {\r\n      setError('Error searching location: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update interpolated position for map display\r\n  const updateInterpolatedPosition = useCallback(() => {\r\n    if (flightData?.live && lastKnownPosition) {\r\n      // Don't interpolate if on ground or if speed is too low\r\n      if (flightData.live.is_ground || flightData.live.speed_horizontal < 50) {\r\n        console.log('Not interpolating - aircraft on ground or speed too low');\r\n        setLastDrawTime(new Date()); // Still update the timestamp to show it's trying\r\n        return;\r\n      }\r\n\r\n      console.log('Calculating new position...');\r\n      const newPos = calculateInterpolatedPosition(\r\n        lastKnownPosition,\r\n        flightData.live.speed_horizontal,\r\n        flightData.live.direction\r\n      );\r\n      \r\n      console.log(`New position: ${newPos.lat}, ${newPos.lng}`);\r\n      \r\n      // Update positions with a unique flight identifier\r\n      newPos.name = `${flightData.flight.number}-${flightData.airline.name}`;\r\n      \r\n      // Set the new interpolated position\r\n      setLastKnownPosition(newPos);\r\n      setAircraftPosition({\r\n        lat: newPos.lat,\r\n        lng: newPos.lng,\r\n        name: newPos.name\r\n      });\r\n      setLastDrawTime(new Date());\r\n    } else {\r\n      console.log('Cannot interpolate - missing flight data or last position');\r\n    }\r\n  }, [flightData, lastKnownPosition, setLastKnownPosition, setAircraftPosition, setLastDrawTime]);\r\n\r\n  // Reset all tracking state and intervals\r\n  const resetAllTrackingState = useCallback(() => {\r\n    console.log('Completely resetting all tracking state');\r\n    \r\n    // Clear aircraft data\r\n    setAircraftPosition(null);\r\n    setAllAircraft([]);\r\n    setTrackingAllAircraft(false);\r\n    setFlightData(null);\r\n    setLastKnownPosition(null);\r\n    \r\n    // Clear UI state\r\n    setDistance(null);\r\n    setDisplayedDistance(null);\r\n    setLastApiCall(null);\r\n    setLastDrawTime(null);\r\n    \r\n    // Clear all intervals - Let useEffect cleanup handle this\r\n    // if (trackingInterval) {\r\n    //   clearInterval(trackingInterval);\r\n    //   setTrackingInterval(null);\r\n    // }\r\n    // if (autoRefreshInterval) {\r\n    //   clearInterval(autoRefreshInterval);\r\n    //   setAutoRefreshInterval(null);\r\n    // }\r\n    // if (interpolationInterval) {\r\n    //   clearInterval(interpolationInterval);\r\n    //   setInterpolationInterval(null);\r\n    // }\r\n    // if (distanceUpdateInterval) {\r\n    //   clearInterval(distanceUpdateInterval);\r\n    //   setDistanceUpdateInterval(null);\r\n    // }\r\n    // if (distanceInterpolationInterval) {\r\n    //   clearInterval(distanceInterpolationInterval);\r\n    //   setDistanceInterpolationInterval(null);\r\n    // }\r\n    \r\n    // Clear storage\r\n    sessionStorage.removeItem('lastApiCall');\r\n    // Keep localStorage items unless explicitly cleared by user\r\n    // localStorage.removeItem('lastSearchQuery');\r\n    // localStorage.removeItem('lastFlightNumber');\r\n  }, []);\r\n\r\n  // Track flight\r\n  const trackFlight = async (forceRefresh: boolean = false) => {\r\n    if (!flightNumber.trim()) {\r\n      setError('Please enter a flight number');\r\n      return;\r\n    }\r\n\r\n    // Only reset state if not doing a background refresh\r\n    if (!forceRefresh) {\r\n      resetAllTrackingState();\r\n      setLoading(true);\r\n    } else {\r\n      console.log('Performing background refresh for flight:', flightNumber);\r\n    }\r\n    \r\n    setError('');\r\n\r\n    try {\r\n      // Skip clearing since we've already done it (or are refreshing)\r\n\r\n      // OpenSky Network API uses ICAO24 addresses or callsigns\r\n      // Since users input IATA codes, we'll search by callsign which is often similar\r\n      // This is not a perfect solution but helps with basic tracking\r\n      const callsign = flightNumber.padEnd(8, ' '); // OpenSky uses fixed-length callsigns\r\n\r\n      const response = await fetch(\r\n        `https://opensky-network.org/api/states/all?time=0&icao24=&callback=`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch flight data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.states || data.states.length === 0) {\r\n        throw new Error('No flight data found');\r\n      }\r\n      \r\n      // Find flight by matching callsign (not perfect but works for many flights)\r\n      // OpenSky data format: [icao24, callsign, origin_country, time_position, time_velocity, longitude, latitude, altitude, on_ground, velocity, heading, vertical_rate, sensors, baro_altitude, squawk, spi, position_source]\r\n      const flightState = data.states.find((state: any[]) => \r\n        state[1] && state[1].trim().includes(flightNumber.toUpperCase())\r\n      );\r\n      \r\n      if (!flightState) {\r\n        throw new Error('Flight not found in tracking data');\r\n      }\r\n      \r\n      // Extract information from the OpenSky state array\r\n      const icao24 = flightState[0];\r\n      const callsignFromApi = flightState[1]?.trim();\r\n      const country = flightState[2];\r\n      const longitude = flightState[5];\r\n      const latitude = flightState[6]; \r\n      const altitude = flightState[7];\r\n      const isOnGround = flightState[8];\r\n      const velocity = flightState[9]; // m/s\r\n      const heading = flightState[10];\r\n      const verticalRate = flightState[11];\r\n      \r\n      // Convert velocity from m/s to km/h\r\n      const speedKmh = velocity ? velocity * 3.6 : 0;\r\n      \r\n      // Create our flight data object\r\n      const flight: FlightData = {\r\n        flight: {\r\n          number: flightNumber,\r\n          iata: flightNumber\r\n        },\r\n        departure: {\r\n          airport: 'N/A', // OpenSky doesn't provide this information\r\n          timezone: ''\r\n        },\r\n        arrival: {\r\n          airport: 'N/A', // OpenSky doesn't provide this information  \r\n          timezone: ''\r\n        },\r\n        airline: {\r\n          name: callsignFromApi || flightNumber // Use callsign as airline+flight if available\r\n        },\r\n        live: {\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          altitude: altitude || 0,\r\n          direction: heading || 0,\r\n          speed_horizontal: speedKmh,\r\n          speed_vertical: verticalRate || 0,\r\n          is_ground: Boolean(isOnGround),\r\n          updated: new Date().toISOString()\r\n        }\r\n      };\r\n\r\n      setLastApiCall(Date.now());\r\n      sessionStorage.setItem('lastApiCall', Date.now().toString());\r\n      \r\n      // Only update state after we have all the data to prevent flashing\r\n      setFlightData(flight);\r\n      \r\n      // Create position object\r\n      const newPosition = {\r\n        lat: flight.live.latitude,\r\n        lng: flight.live.longitude,\r\n        name: `${flight.airline.name} ${flight.flight.number}`,\r\n        timestamp: Date.now()\r\n      };\r\n      \r\n      // Set last known position for interpolation\r\n      setLastKnownPosition(newPosition); \r\n      \r\n      // Set aircraft position for display\r\n      setAircraftPosition({\r\n        lat: newPosition.lat,\r\n        lng: newPosition.lng,\r\n        name: newPosition.name\r\n      });\r\n    } catch (err) {\r\n      setError('Error tracking flight: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n      // Reset all flight data on error\r\n      resetAllTrackingState();\r\n    } finally {\r\n      // Only set loading to false if we were initially loading\r\n      if (!forceRefresh) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Get all aircraft\r\n  const getAllAircraft = async (isAutoRefresh: boolean = false) => {\r\n    if (!isAutoRefresh) {\r\n      // Always reset all state before tracking all aircraft\r\n      resetAllTrackingState();\r\n      \r\n      setLoading(true);\r\n      setError('');\r\n    }\r\n    \r\n    try {\r\n      // Skip clearing since we've already done it\r\n      \r\n      // Set tracking mode\r\n      setTrackingAllAircraft(true);\r\n\r\n      const response = await fetch(\r\n        `https://opensky-network.org/api/states/all?time=0&callback=`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch aircraft data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.states || data.states.length === 0) {\r\n        throw new Error('No aircraft data found');\r\n      }\r\n      \r\n      // Process all aircraft\r\n      const aircraftData: AllAircraftData[] = data.states\r\n        .filter((state: any[]) => \r\n          // Filter out aircraft with invalid lat/long\r\n          state[5] && state[6] && \r\n          !isNaN(state[5]) && !isNaN(state[6]) &&\r\n          // Only show airborne aircraft (optional, remove if you want to show all)\r\n          !state[8]\r\n        )\r\n        .map((state: any[]) => ({\r\n          icao24: state[0],\r\n          callsign: state[1]?.trim(),\r\n          latitude: state[6],\r\n          longitude: state[5],\r\n          altitude: state[7] || 0,\r\n          direction: state[10] || 0,\r\n          speed: state[9] ? state[9] * 3.6 : 0, // Convert m/s to km/h\r\n          isOnGround: Boolean(state[8])\r\n        }));\r\n\r\n      setAllAircraft(aircraftData);\r\n      setLastApiCall(Date.now());\r\n      sessionStorage.setItem('lastApiCall', Date.now().toString());\r\n      \r\n      // Center map to a reasonable view if we have aircraft\r\n      if (aircraftData.length > 0) {\r\n        // Find a central aircraft or just pick the first one\r\n        const centralAircraft = aircraftData[Math.floor(aircraftData.length / 2)];\r\n        setLocation({\r\n          lat: centralAircraft.latitude,\r\n          lng: centralAircraft.longitude,\r\n          name: 'Map Center'\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching aircraft: ' + (err instanceof Error ? err.message : 'Unknown error'));\r\n      setTrackingAllAircraft(false);\r\n      resetAllTrackingState();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Clear stored location\r\n  const clearLocation = () => {\r\n    // Reset map view\r\n    setLocation(null);\r\n    \r\n    // Reset input fields\r\n    setSearchQuery('');\r\n    setError('');\r\n    setFlightNumber('');\r\n    \r\n    // Reset all tracking state\r\n    resetAllTrackingState();\r\n    \r\n    // Clear localStorage\r\n    localStorage.removeItem('lastLocation');\r\n    localStorage.removeItem('lastSearchQuery');\r\n    localStorage.removeItem('lastFlightNumber');\r\n  };\r\n\r\n  // Force refresh flight data from API\r\n  const handleRefreshClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    if (trackingAllAircraft) {\r\n      getAllAircraft(false);\r\n    } else {\r\n      trackFlight(true);\r\n    }\r\n  };\r\n\r\n  const interpolatePosition = (startPos: InterpolatedPosition, endPos: InterpolatedPosition, progress: number): InterpolatedPosition => {\r\n    const startTime = startPos.timestamp || 0;\r\n    const endTime = endPos.timestamp || 1;\r\n    const currentTime = startTime + (endTime - startTime) * progress;\r\n    \r\n    return {\r\n      lat: startPos.lat + (endPos.lat - startPos.lat) * progress,\r\n      lng: startPos.lng + (endPos.lng - startPos.lng) * progress,\r\n      name: `${startPos.name} → ${endPos.name}`,\r\n      timestamp: currentTime\r\n    };\r\n  };\r\n\r\n  const updateAircraftPosition = (progress: number) => {\r\n    if (lastKnownPosition && aircraftPosition) {\r\n      const interpolated = interpolatePosition(\r\n        {\r\n          ...lastKnownPosition,\r\n          name: lastKnownPosition.name || 'Unknown Location'\r\n        },\r\n        {\r\n          ...aircraftPosition,\r\n          name: aircraftPosition.name || 'Unknown Location'\r\n        },\r\n        progress\r\n      );\r\n      setAircraftPosition(interpolated);\r\n    }\r\n  };\r\n\r\n  const handleLocationUpdate = (location: Location) => {\r\n    const position: InterpolatedPosition = {\r\n      lat: location.lat,\r\n      lng: location.lng,\r\n      name: location.name || 'Unknown Location',\r\n      timestamp: Date.now()\r\n    };\r\n    setLastKnownPosition(position);\r\n    setAircraftPosition(position);\r\n  };\r\n\r\n  // Initialize map interpolation if cached data is loaded\r\n  useEffect(() => {\r\n    // Clear any existing interval first\r\n    if (interpolationInterval) {\r\n      console.log('Clearing existing interpolation interval');\r\n      clearInterval(interpolationInterval);\r\n      setInterpolationInterval(null);\r\n    }\r\n    \r\n    // Only set up new interpolation if we have valid flight data and not tracking all aircraft\r\n    if (flightData && lastKnownPosition && !trackingAllAircraft) {\r\n      console.log('Initializing interpolation from fresh data');\r\n      // Use immediate call for testing and then set interval\r\n      updateInterpolatedPosition(); // Initial call\r\n      const interpolation = setInterval(() => {\r\n        console.log('Interpolation interval triggered');\r\n        updateInterpolatedPosition();\r\n      }, 5000); // Update position every 5 seconds\r\n      \r\n      setInterpolationInterval(interpolation);\r\n    }\r\n\r\n    // Clean up interval when component unmounts\r\n    return () => {\r\n      if (interpolationInterval) {\r\n        clearInterval(interpolationInterval);\r\n      }\r\n    };\r\n  }, [flightData, lastKnownPosition, trackingAllAircraft, updateInterpolatedPosition]);\r\n  \r\n  // Set up auto-refresh interval for API data\r\n  useEffect(() => {\r\n    // Clean up any existing interval first\r\n    if (autoRefreshInterval) {\r\n      console.log('Clearing existing auto-refresh interval before setting up a new one');\r\n      clearInterval(autoRefreshInterval);\r\n      setAutoRefreshInterval(null);\r\n    }\r\n\r\n    // If we have flight data and a flight number, set up auto-refresh\r\n    if ((flightData && flightNumber) || trackingAllAircraft) {\r\n      console.log('Setting up auto-refresh interval for flight data');\r\n      const refreshInterval = setInterval(() => {\r\n        console.log('Auto-refreshing flight data from API');\r\n        if (trackingAllAircraft) {\r\n          getAllAircraft(true); // Add parameter for refresh\r\n        } else {\r\n          trackFlight(true); // Force refresh from API\r\n        }\r\n      }, 60000); // Refresh every 60 seconds (1 minute)\r\n      \r\n      setAutoRefreshInterval(refreshInterval);\r\n    }\r\n\r\n    // Clean up on unmount or when dependencies change\r\n    return () => {\r\n      if (autoRefreshInterval) {\r\n        console.log('Clearing auto-refresh interval');\r\n        clearInterval(autoRefreshInterval);\r\n      }\r\n    };\r\n  }, [flightData, flightNumber, trackingAllAircraft, getAllAircraft, trackFlight]);\r\n\r\n  return (\r\n    <div className={`${isDarkMode ? 'bg-gray-900' : 'bg-gray-100'} p-2 sm:p-4`}>\r\n      <div className={`${isDarkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow p-3 sm:p-6 max-w-7xl mx-auto`}>\r\n        <div className=\"mb-2 sm:mb-4 space-y-2 sm:space-y-4\">\r\n          <div className=\"flex flex-col sm:flex-row flex-wrap gap-2 sm:gap-4\">\r\n            <div className=\"w-full sm:flex-1 sm:min-w-[200px] flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && searchLocation()}\r\n                hidden={location !== null}\r\n                placeholder=\"Enter location (e.g., London, UK)\"\r\n                className={`flex-1 p-2 text-sm sm:text-base border rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  isDarkMode ? 'bg-gray-700 text-white border-gray-600' : 'bg-white text-gray-900'\r\n                }`}\r\n              />\r\n              <button\r\n                onClick={searchLocation}\r\n                disabled={loading || !searchQuery.trim()}\r\n                hidden={location !== null}\r\n                className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-blue-300 whitespace-nowrap\"\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n            <div className=\"w-full sm:flex-1 sm:min-w-[200px] flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={flightNumber}\r\n                onChange={(e) => setFlightNumber(e.target.value.toUpperCase())}\r\n                onKeyPress={(e) => e.key === 'Enter' && trackFlight()}\r\n                placeholder=\"Enter flight number (e.g., BA123)\"\r\n                disabled={trackingAllAircraft}\r\n                className={`flex-1 p-2 text-sm sm:text-base border rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                  isDarkMode ? 'bg-gray-700 text-white border-gray-600' : 'bg-white text-gray-900'\r\n                } ${trackingAllAircraft ? 'opacity-50' : ''}`}\r\n              />\r\n              <button\r\n                onClick={(e) => trackFlight()}\r\n                disabled={loading || !flightNumber.trim() || trackingAllAircraft}\r\n                className={`px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-purple-600 text-white rounded hover:bg-purple-700 disabled:bg-purple-300 whitespace-nowrap ${\r\n                  trackingAllAircraft ? 'opacity-50' : ''\r\n                }`}\r\n              >\r\n                Track\r\n              </button>\r\n              <button\r\n                onClick={(e) => getAllAircraft(false)}\r\n                disabled={loading || trackingAllAircraft}\r\n                className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-green-300 whitespace-nowrap\"\r\n              >\r\n                All Aircraft\r\n              </button>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              {(location || trackingAllAircraft) && (\r\n                <button\r\n                  onClick={clearLocation}\r\n                  disabled={loading}\r\n                  className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-red-600 text-white rounded hover:bg-red-700 disabled:bg-red-300 whitespace-nowrap\"\r\n                >\r\n                  Clear\r\n                </button>\r\n              )}\r\n              {(flightData || trackingAllAircraft) && (\r\n                <button\r\n                  onClick={handleRefreshClick}\r\n                  className=\"px-2 sm:px-4 py-1 sm:py-2 text-xs sm:text-sm bg-blue-600 text-white rounded hover:bg-blue-700 whitespace-nowrap\"\r\n                >\r\n                  Refresh\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className={`p-2 sm:p-3 rounded text-xs sm:text-sm ${\r\n              isDarkMode ? 'bg-red-900 text-red-100' : 'bg-red-100 text-red-700'\r\n            }`}>\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          {flightData && (\r\n            <div className={`p-2 sm:p-4 rounded ${\r\n              isDarkMode ? 'bg-blue-900 text-blue-100' : 'bg-blue-100 text-blue-700'\r\n            }`}>\r\n              <div className=\"flex justify-between items-center mb-2 sm:mb-3\">\r\n                <div className=\"font-medium text-base sm:text-lg\">\r\n                 {flightData.flight.number}\r\n                </div>\r\n              </div>\r\n              {displayedDistance !== null && (\r\n                <div className=\"text-center\">\r\n                  <div className={`text-xs sm:text-sm font-medium mb-1 ${\r\n                    isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                  }`}>\r\n                    Distance to Aircraft\r\n                  </div>\r\n                  <div className=\"font-mono text-lg sm:text-2xl font-bold\">\r\n                    {Math.round(displayedDistance).toLocaleString()}m\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"space-y-2 sm:space-y-3\">\r\n                {flightData.live && (\r\n                  <div className=\"grid grid-cols-2 gap-2 sm:gap-4 mt-1 sm:mt-2\">\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Altitude\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{metersToFeet(flightData.live.altitude)}ft</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Speed\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{kmhToKnots(flightData.live.speed_horizontal)}kts</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Direction\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{flightData.live.direction}°</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className={`text-xs sm:text-sm font-medium text-center ${\r\n                        isDarkMode ? 'text-blue-200' : 'text-blue-800'\r\n                      }`}>\r\n                        Status\r\n                      </div>\r\n                      <div className=\"text-sm sm:text-base text-center\">{flightData.live.is_ground ? 'On Ground' : 'In Air'}</div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {lastApiCall && (\r\n                  <div className={`text-[10px] sm:text-xs mt-1 sm:mt-2 text-center ${\r\n                    isDarkMode ? 'text-blue-300' : 'text-blue-600'\r\n                  }`}>\r\n                    Using API data from {new Date(lastApiCall).toLocaleString()}\r\n                    <br />\r\n                    <span className=\"italic\">Auto-refreshes every minute, this use a lot of data so recommend using this feature with wifi only</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {trackingAllAircraft && (\r\n            <div className={`p-2 sm:p-4 rounded ${\r\n              isDarkMode ? 'bg-green-900 text-green-100' : 'bg-green-100 text-green-700'\r\n            }`}>\r\n              <div className=\"flex justify-between items-center mb-1 sm:mb-3\">\r\n                <div className=\"font-medium text-base sm:text-lg\">\r\n                  All Aircraft\r\n                </div>\r\n                <div className=\"text-xs sm:text-sm font-mono\">\r\n                  {allAircraft.length} aircraft\r\n                </div>\r\n              </div>\r\n              <div className={`text-[10px] sm:text-xs mt-1 sm:mt-2 text-center ${\r\n                isDarkMode ? 'text-green-300' : 'text-green-600'\r\n              }`}>\r\n                Using API data from {lastApiCall ? new Date(lastApiCall).toLocaleString() : \"N/A\"}\r\n                <br />\r\n                <span className=\"italic\">Auto-refreshes every minute, this use a lot of data so recommend using this feature with wifi only</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={`h-[50vh] sm:h-[60vh] md:h-[600px] rounded border ${\r\n          isDarkMode ? 'bg-gray-700 border-gray-600' : 'bg-gray-50 border-gray-200'\r\n        }`}>\r\n          <MapContainer\r\n            style={{ height: '100%', width: '100%' }}\r\n            center={location ? [location.lat, location.lng] : aircraftPosition ? [aircraftPosition.lat, aircraftPosition.lng] : [51.505, -0.09]}\r\n            zoom={location && !trackingAllAircraft ? 13 : aircraftPosition ? 10 : 6}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n              url={isDarkMode \r\n                ? \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n                : \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              }\r\n            />\r\n            {location && (\r\n              <Marker \r\n                position={[location.lat, location.lng]} \r\n              />\r\n            )}\r\n            {aircraftPosition && flightData && !trackingAllAircraft && (\r\n              <>\r\n                <Marker \r\n                  key={`${flightData.flight.number}-${aircraftPosition.lat.toFixed(6)}-${aircraftPosition.lng.toFixed(6)}-${flightData.live.direction || 0}-${Date.now()}`}\r\n                  position={[aircraftPosition.lat, aircraftPosition.lng]} \r\n                  icon={L.divIcon({\r\n                    html: `<div style=\"transform: rotate(${flightData.live.direction || 0}deg)\">\r\n                      <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 24px; height: 24px;\" />\r\n                    </div>`,\r\n                    className: '',\r\n                    iconSize: [24, 24],\r\n                    iconAnchor: [12, 12]\r\n                  })}\r\n                />\r\n                <MapUpdater center={[aircraftPosition.lat, aircraftPosition.lng]} />\r\n              </>\r\n            )}\r\n            {trackingAllAircraft && allAircraft.length > 0 && allAircraft.map(aircraft => (\r\n              <Marker \r\n                key={`${aircraft.icao24}-${aircraft.latitude.toFixed(6)}-${aircraft.longitude.toFixed(6)}`}\r\n                position={[aircraft.latitude, aircraft.longitude]} \r\n                icon={L.divIcon({\r\n                  html: `<div style=\"transform: rotate(${aircraft.direction}deg)\">\r\n                    <img src=\"${planeIcon}\" alt=\"plane\" style=\"width: 16px; height: 16px;\" />\r\n                  </div>`,\r\n                  className: '',\r\n                  iconSize: [16, 16],\r\n                  iconAnchor: [8, 8]\r\n                })}\r\n              >\r\n              </Marker>\r\n            ))}\r\n          </MapContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlightTracker; ","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletContext } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance, context } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        const { children } = props;\n        return children == null ? null : /*#__PURE__*/ React.createElement(LeafletContext, {\n            value: context\n        }, children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        // biome-ignore lint/correctness/useExhaustiveDependencies: update overlay when children change\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n    const eventHandlersRef = useRef(undefined);\n    useEffect(function addEventHandlers() {\n        if (eventHandlers != null) {\n            element.instance.on(eventHandlers);\n        }\n        eventHandlersRef.current = eventHandlers;\n        return function removeEventHandlers() {\n            if (eventHandlersRef.current != null) {\n                element.instance.off(eventHandlersRef.current);\n            }\n            eventHandlersRef.current = null;\n        };\n    }, [\n        element,\n        eventHandlers\n    ]);\n}\n","import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n    const attributionRef = useRef(attribution);\n    useEffect(function updateAttribution() {\n        if (attribution !== attributionRef.current && map.attributionControl != null) {\n            if (attributionRef.current != null) {\n                map.attributionControl.removeAttribution(attributionRef.current);\n            }\n            if (attribution != null) {\n                map.attributionControl.addAttribution(attribution);\n            }\n        }\n        attributionRef.current = attribution;\n    }, [\n        map,\n        attribution\n    ]);\n}\n","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { useLayerLifecycle } from './layer.js';\nimport { withPane } from './pane.js';\nexport function usePathOptions(element, props) {\n    const optionsRef = useRef(undefined);\n    useEffect(function updatePathOptions() {\n        if (props.pathOptions !== optionsRef.current) {\n            const options = props.pathOptions ?? {};\n            element.instance.setStyle(options);\n            optionsRef.current = options;\n        }\n    }, [\n        element,\n        props\n    ]);\n}\nexport function createPathHook(useElement) {\n    return function usePath(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        usePathOptions(elementRef.current, props);\n        return elementRef;\n    };\n}\n","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component.js';\nimport { createControlHook } from './control.js';\nimport { createDivOverlayHook } from './div-overlay.js';\nimport { createElementHook, createElementObject } from './element.js';\nimport { createLayerHook } from './layer.js';\nimport { createPathHook } from './path.js';\nexport function createControlComponent(createInstance) {\n    function createElement(props, context) {\n        return createElementObject(createInstance(props), context);\n    }\n    const useElement = createElementHook(createElement);\n    const useControl = createControlHook(useElement);\n    return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n    const useElement = createElementHook(createElement);\n    const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n    return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const usePath = createPathHook(useElement);\n    return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createLeafComponent(useLayer);\n}\n","import { LeafletContext, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nfunction MapContainerComponent({ bounds, boundsOptions, center, children, className, id, placeholder, style, whenReady, zoom, ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    const mapInstanceRef = useRef(undefined);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: ref callback\n    const mapRef = useCallback((node)=>{\n        if (node !== null && !mapInstanceRef.current) {\n            const map = new LeafletMap(node, options);\n            mapInstanceRef.current = map;\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletContext, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        ...props,\n        ref: mapRef\n    }, contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n    return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n    const map = useMap();\n    useEffect(function addMapEventHandler() {\n        // @ts-ignore event type\n        map.on(type, handler);\n        return function removeMapEventHandler() {\n            // @ts-ignore event type\n            map.off(type, handler);\n        };\n    }, [\n        map,\n        type,\n        handler\n    ]);\n    return map;\n}\nexport function useMapEvents(handlers) {\n    const map = useMap();\n    useEffect(function addMapEventHandlers() {\n        map.on(handlers);\n        return function removeMapEventHandlers() {\n            map.off(handlers);\n        };\n    }, [\n        map,\n        handlers\n    ]);\n    return map;\n}\n","import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef(undefined);\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef(undefined);\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            updateElement\n        ]);\n        return elementRef;\n    };\n}\n","import { createContext, use } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport function useLeafletContext() {\n    const context = use(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPlaneIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"#ffff00\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22,16v-2l-8.5-5V3.5C13.5,2.67,12.83,2,12,2s-1.5,0.67-1.5,1.5V9L2,14v2l8.5-2.5V19L8,20.5V22l4-1l4,1v-1.5L13.5,19 v-5.5L22,16z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlaneIcon);\nexport default __webpack_public_path__ + \"static/media/plane-icon.5312c99550d9e701054eea554971757c.svg\";\nexport { ForwardRef as ReactComponent };","export function withPane(props, context) {\n    const pane = props.pane ?? context.pane;\n    return pane ? {\n        ...props,\n        pane\n    } : props;\n}\n"],"names":["TileLayer","createTileLayerComponent","_ref","context","url","options","layer","LeafletTileLayer","withPane","createElementObject","props","prevProps","opacity","zIndex","setOpacity","setZIndex","updateGridLayer","setUrl","Marker","createLayerComponent","ctx","position","marker","LeafletMarker","extendContext","overlayContainer","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","calculateInterpolatedPosition","startPos","speed","heading","_startPos$timestamp","now","Date","distance","timestamp","headingRad","Math","PI","lat1","lat","lon1","lng","d","lat2","asin","sin","cos","lon2","atan2","name","calculateDistance","φ1","φ2","Δφ","Δλ","a","c","sqrt","round","MapUpdater","center","map","useMap","useEffect","setView","getZoom","FlightTracker","isDarkMode","useTheme","location","setLocation","useState","aircraftPosition","setAircraftPosition","allAircraft","setAllAircraft","trackingAllAircraft","setTrackingAllAircraft","setDistance","displayedDistance","setDisplayedDistance","error","setError","searchQuery","setSearchQuery","localStorage","getItem","loading","setLoading","flightNumber","setFlightNumber","flightData","setFlightData","lastKnownPosition","setLastKnownPosition","trackingInterval","setTrackingInterval","autoRefreshInterval","setAutoRefreshInterval","interpolationInterval","setInterpolationInterval","distanceUpdateInterval","setDistanceUpdateInterval","distanceInterpolationInterval","setDistanceInterpolationInterval","lastDrawTime","setLastDrawTime","lastApiCall","setLastApiCall","savedLocation","parsedLocation","JSON","parse","e","console","savedFlightNumber","trackFlight","setItem","removeItem","stringify","clearInterval","newDistance","interval","setInterval","currentDistance","live","distanceInterpolation","is_ground","speed_horizontal","newPos","direction","airline","flight","number","diff","abs","step","sign","min","max","timer","setTimeout","prev","clearTimeout","searchLocation","async","trim","response","fetch","encodeURIComponent","ok","Error","data","json","length","newLocation","parseFloat","lon","display_name","err","message","updateInterpolatedPosition","useCallback","log","resetAllTrackingState","sessionStorage","forceRefresh","arguments","undefined","_flightState$","padEnd","states","flightState","find","state","includes","toUpperCase","callsignFromApi","longitude","latitude","altitude","isOnGround","velocity","verticalRate","iata","departure","airport","timezone","arrival","speed_vertical","Boolean","updated","toISOString","toString","newPosition","getAllAircraft","aircraftData","filter","isNaN","_state$","icao24","callsign","centralAircraft","floor","interpolation","refreshInterval","_jsx","className","children","_jsxs","type","value","onChange","target","onKeyPress","key","hidden","placeholder","onClick","disabled","clearLocation","event","preventDefault","toLocaleString","meters","kmh","MapContainer","style","height","width","zoom","scrollWheelZoom","attribution","_Fragment","html","planeIcon","iconSize","iconAnchor","toFixed","aircraft","createContainerComponent","useElement","ContainerComponent","forwardedRef","instance","current","useImperativeHandle","React","LeafletContext","forwardRef","useEventHandlers","element","eventHandlers","eventHandlersRef","useRef","on","off","useLayerLifecycle","layerContainer","addLayer","removeLayer","createLayerHook","useLeafletContext","elementRef","attributionRef","attributionControl","removeAttribution","addAttribution","useAttribution","createPathHook","optionsRef","pathOptions","setStyle","usePathOptions","createElement","updateElement","createElementHook","createPathComponent","LeafComponent","createLeafComponent","MapContainerComponent","bounds","boundsOptions","id","whenReady","setContext","mapInstanceRef","mapRef","node","LeafletMap","fitBounds","createLeafletContext","remove","contents","ref","useMapEvents","handlers","container","Object","freeze","propsRef","CONTEXT_VERSION","__version","source","extra","createContext","use","pane"],"sourceRoot":""}